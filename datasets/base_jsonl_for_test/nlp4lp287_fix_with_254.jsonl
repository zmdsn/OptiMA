{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A firm produces \\var{M} different goods using \\var{N} different raw materials.\n- The firm has \\var{available_{i}} of raw material \\var{i} available.\n- Good \\var{j} requires \\var{req_{i,j}} units of material \\var{i} per unit produced.\n- Good \\var{j} results in a revenue of \\var{price_j} per unit produced.\n\n\nINPUT FORMAT: \n\n{\n    \"available\": [available_{i} for i in 1, ..., N]\n    \"requirements\": [[req_{i,j} for i in 1, ..., N] for j in 1, ..., M],\n    \"prices\": [price_{j} for j in 1, ..., M]\n}\n\nOBJECTIVE: How much of each good should the firm produce in order to maximize its total revenue?\n\nOUTPUT INFO:\n\n- the amount of each good produced \\var{amount_{j}}.\n\nOUTPUT FORMAT:\n\n{\n    \"amount\": [amount_{j} for j in 1, ..., M]\n}\n", "data": {"M": 4, "N": 5, "Available": [10, 20, 15, 35, 25], "Requirements": [[3, 2, 0, 0, 0], [0, 5, 2, 1, 0], [1, 0, 0, 5, 3], [0, 3, 1, 1, 5]], "Prices": [7, 10, 5, 9]}, "obj": 78.64, "order": "1"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- Consider a road divided into \\var{N} segments that is illuminated by \\var{M} lamps.\n- Let \\var{power_j} be the power of the \\var{j}-th lamp. The illumination \\var{ill_i} of the \\var{i}-th segment is assumed to be \\sum_{j=1}^{\\var{M}} \\var{coeff_{i,j}} \\var{power_j}, where \\var{coeff_{i,j}} are known coefficients.\n- Let \\var{desired_i} be the desired illumination of road \\var{i}. \n- We are interested in choosing the lamp powers \\var{power_j} so that the illuminations {ill_i} are close to the desired illuminations {desired_i}. \n\nINPUT FORMAT: \n\n{\n    \"coeff\": [[coeff_{i,j} for j in 1, ..., M] for i in 1, ..., N],\n    \"desired\": [desired_i for i in 1, ..., N]\n}\n\nOBJECTIVE: Find the lamp powers \\var{power_j} that minimize the absolute error between the illuminations {ill_i} and the desired illuminations {desired_i}.\n\nOUTPUT INFO:\n\n- \\var{power_j} is the optimal power of the \\var{j}-th lamp.\n- \\var{error} is the absolute error between the illuminations {ill_i} and the desired illuminations {desired_i}.\n\nOUTPUT FORMAT:\n\n{\n    \"power\": [power_j for j in 1, ..., M]\n    \"error\": error\n}", "data": {"N": 3, "M": 2, "Coefficients": [[0.5, 0.3], [0.2, 0.4], [0.1, 0.6]], "DesiredIlluminations": [14, 3, 12]}, "obj": 7.37, "order": "10"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- Consider a school district with \\var{N} neighborhoods, \\var{S} schools, and \\var{G} grades at each school.\n- Each school \\var{s} has a capacity of \\var{capacity_{s,g}} for grade \\var{g}. \n- In each neighborhood \\var{n}, the student population of grade \\var{g} is \\var{population_{n,g}}. \n- Finally, the distance of school \\var{s} from neighborhood \\var{n} is \\var{d_{i,j}}.\n\nINPUT FORMAT: \n\n{\n    \"capacity\": [[capacity_{s,g} for g in 1, ..., G] for s in 1, ..., S],\n    \"population\": [[population_{n,g} for g in 1, ..., G] for n in 1, ..., N],\n    \"distance\": [[d_{n,s} for s in 1, ..., S] for n in 1, ..., N]\n}\n\nOBJECTIVE: We want to assign all students to schools, while minimizing the total distance traveled by all students. We may ignore the fact that numbers of students must be integers.\n\nOUTPUT INFO:\n- the output should show optimal \\var{x_{n,s,g}} for all \\var{n}, \\var{s}, \\var{g} (i.e., the number of students of grade \\var{g} in neighborhood \\var{n} assigned to school \\var{s}).\n- the output should also include \\var{total_distance}, the total distance traveled by all students.\n\nOUTPUT FORMAT:\n\n{\n    \"assignment\": [[[x_{n,s,g} for g in 1, ..., G] for s in 1, ..., S] for n in 1, ..., N],\n    \"total_distance\": total_distance\n}\n", "data": {"S": 3, "G": 2, "N": 4, "Capacity": [[15, 20], [20, 15], [5, 17]], "Population": [[7, 19], [4, 12], [9, 2], [6, 8]], "Distance": [[5.2, 4.0, 3.1], [3.8, 5.5, 6.1], [4.2, 3.5, 5.0], [5.0, 4.1, 3.2]]}, "obj": 240.9, "order": "11"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n- A company must deliver \\var{deliver_i} units of its product at the end of the \\var{i}_th month.\n- Material produced during a month can be delivered either at the end of the same month or can be stored as inventory and delivered at the end of a subsequent month.\n- There is a storage cost of \\var{storage_cost} dollars per month for each unit of product held in inventory. \n- The year begins with zero inventory. \n- If the company produces \\var{x_i} units in month \\var{i} and \\var{x_{i+1}} units in month \\var{i}+1, it incurs a cost of \\var{switch_cost} |\\var{x_{i+1}} - \\var{x_i}|  dollars, reflecting the cost of switching to a new production level. \n- Assume that inventory left at the end of the year has no value and does not incur any storage cost.\n- The company wants to minimize the total cost of the production and inventory schedule over the next \\var{T} months.\n\nINPUT FORMAT: \n\n{\n    \"deliver\": [deliver_i for i in 1, ..., T],\n    \"storage_cost\": storage_cost,\n    \"switch_cost\": switch_cost,\n}\n\nOBJECTIVE: Minimize the total cost of the production and inventory schedule over the whole period.\n\nOUTPUT INFO:\n\n- \\var{x_i} is the number of units produced in month \\var{i}.\n\nOUTPUT FORMAT:\n\n{\n    \"x\": [x_i for i in 1, ..., T],\n    \"cost\": cost,\n}\n", "data": {"T": 12, "Deliver": [100, 120, 110, 130, 150, 100, 90, 110, 95, 125, 130, 100], "StorageCost": 5, "SwitchCost": 10}, "obj": 1308, "order": "12"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- Suppose that there are \\var{N} available currencies, and assume that one unit of currency \\var{i} can be exchanged for \\var{rate_{i,j}} units of currency \\var{j} (Naturally, we assume that \\var{rate_{i,j}} > 0).\n- There are also certain regulations that impose a limit \\var{limit_i} on the total amount of currency \\var{i} that can be exchanged (whether to other currencies or from other currencies) on any given day.\n- Suppose that we start the day with \\var{start_i} units of currency \\var{i}\n- Provide a linear programming formulation of this problem. Assume that for any sequence \\var{i_1}, â€¦ ,\\var{i_k} of currencies, we have \\var{rate_{i_1,i_2}}, \\var{rate_{i_2,i_3}}, ..., \\var{rate_{i_{k-1}, i_{k}}, \\var{rate_{i_k, i_1}} <= 1, which means that wealth cannot be multiplied by going through a cycle of currencies.\n\nINPUT FORMAT: \n\n{\n    \"start\": [start_i for i in 1, ..., N],\n    \"limit\": [limit_i for i in 1, ..., N],\n    \"rate\": [[rate_{i,j} for j in 1, ..., N] for i in 1, ..., N],\n}\n\nOBJECTIVE: The objective is to maximize the number of units of currency \\var{N} that we end up with at the end of the day, through a sequence of currency transactions.\n\nOUTPUT INFO: \n\n- The output json file contains a list of transactions, where each transaction is a json object with the following fields:\n    - from: the currency that we are exchanging from\n    - to: the currency that we are exchanging to\n    - amount: the amount of currency that we are exchanging\n- The output json file also contains the final amount of currency \\var{N} that we end up with at the end of the day.\n\nOUTPUT FORMAT: \n\n{\n    \"transactions\": [\n        {\n            \"from\": i,\n            \"to\": j,\n            \"amount\": amount_{i,j}\n        }\n    ],\n    \"final_amount_of_currency_N\": final_amount_of_currency_N\n}", "data": {"N": 3, "Start": [100.0, 50.0, 200.0], "Limit": [1000.0, 200.0, 3000.0], "Rate": [[0.99, 0.9, 1.02], [0.95, 0.99, 0.92], [0.9, 0.91, 0.99]]}, "obj": 350.45, "order": "13"}
{"description": "\nPROBLEM TYPE: LP\n\nPROBLEM INFO: \n- Consider a set \\var{P} described by linear inequality constraints, that is:\n \\var{P} = {\\var{x} \\in R^\\var{N} | \\var{a_i}^T x <= \\var{b_i} , i = 1, ..., m}.\n\nwhere \\var{a_i} \\in R^\\var{N} and \\var{b_i} \\in R\n\n- A ball with center \\var{y} in R^\\var{N} and radius \\var{r} is defined as the set of all points within (Euclidean) distance \\var{r} from \\var{y}.\n\n\nINPUT FORMAT: \n\n{\n    \"A\": [[a_i_j for j in 1, ..., n] for i in 1, ..., m],\n    \"b\": [b_i for i in 1, ..., m]\n}\n\nOBJECTIVE: We are interested in finding a ball with the largest possible radius, which is entirely contained within the set \\var{P} (The center of such a ball is called the Chebychev center of \\var{P}.\n\nOUTPUT INFO:\n\n- center (list): The center of the ball as a list of floats of length \\var{N}\n- radius (float): The radius of the ball as a float\n\nOUTPUT FORMAT:\n\n{\n    \"center\": [y_j for j in 1, ..., n],\n    \"radius\": r\n}\n\n", "data": {"M": 4, "N": 2, "A": [[1.0, 0.0], [-1.0, 0.0], [0.0, 1.0], [0.0, -1.0]], "B": [2.0, 2.0, 3.0, 5.0]}, "obj": 2.0, "order": "14"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- A company produces and sells \\var{P} different products. \n- The demand for each product is unlimited, but the company is constrained by cash availability and machine capacity.\n- Each unit of the \\var{i}-th product requires \\var{hour_i} machine hours.\n- There are \\var{availableHours} machine hours available in the current production period.\n- The production costs are \\var{cost_i} per unit of the \\var{i}-th product.\n- The selling prices of the \\var{i}-th product is \\var{price_i} per unit.\n- The available cash is \\var{cash}.\n- Furthermore, \\var{investRate_i} of the sales revenues from the \\var{i}-th product will be made available to finance operations during the current period.\n- \\var{investPercentage_i} is a number between 0 and 1\n- The company could increase its available machine hours by \\var{upgradeHours}, after spending \\var{upgradeCost} for certain repairs. \n- The net income from each product is the revenue we get from selling it minus the production cost and the investment cost.\n\nINPUT FORMAT:\n\n{\n    \"cash\": cash,\n    \"hour\": [hour_i for i in 1, ..., P],\n    \"cost\": [cost_i for i in 1, ..., P],\n    \"price\": [price_i for i in 1, ..., P],\n    \"investPercentage\": [investPercentage_i for i in 1, ..., P],\n    \"upgradeHours\": upgradeHours,   \n    \"upgradeCost\": upgradeCost,\n    \"availableHours\": availableHours,\n}\n\nOBJECTIVE: We are aiming at maximizing total net income subject to the cash availability and machine capacity limitations\n\nOUTPUT INFO:\n\n- \\var{net_income} shows the net income of the company\n- \\var{production_i} shows the production quantity of the \\var{i}-th product\n- \\var{upgrade} is a boolean variable that shows whether the company should upgrade its machine capacity or not\n\nOUTPUT FORMAT:\n\n{\n    \"net_income\": net_income,\n    \"production\": [production_i for i in 1, ..., P],\n    \"upgrade\": true/false,\n}", "data": {"P": 2, "Cash": 3000, "Hour": [2, 6], "Cost": [3, 2], "Price": [6, 5], "InvestPercentage": [0.4, 0.3], "UpgradeHours": 2000, "UpgradeCost": 400, "AvailableHours": 2000}, "obj": 654.2, "order": "15"}
{"description": "PROBLEM TYPE: MILP\n\nPROBLEM INFO: \n- A company produces \\var{N} kinds of products. \n- A product of the \\var{i}-th type requires \\var{assemblyHour_i} hours of assembly labor, \\var{testingHour_i} hours of testing, and \\var{materialCost_i} worth of raw materials (in $).\n- Given the current personnel of the company, there can be at most \\var{maxAssembly} hours of assembly labor and \\var{maxTesting} hours of testing, each day.\n- Product of the \\var{i}-th type has a price of \\var{price_i} dollars.\n- The company can schedule up tp \\var{maxOvertimeAssembly} hours of overtime assembly labor can be schedÂ­uled, at a cost of \\var{overtimeAssemblyCost} per hour.\n- Suppose that the raw material supplier provides a \\var{materialDiscount}% discount if the daily bill is above \\var{discountThreshold} dollars (\\var{materialDiscount} is a number between 0 and 100).\n\nINPUT FORMAT: \n\n{\n    \"assemblyHour\": [assemblyHour_i for i in 1, ..., N]\n    \"testingHour\": [testingHour_i for i in 1, ..., N],\n    \"materialCost\": [materialCost_i for i in 1, ..., N],\n    \"maxAssembly\": maxAssembly\n    \"maxTesting\": maxTesting,\n    \"price\": [price_i for i in 1, ..., N],\n    \"maxOvertimeAssembly\": maxOvertimeAssembly,\n    \"overtimeAssemblyCost\": overtimeAssemblyCost,\n    \"materialDiscount\": materialDiscount,\n    \"discountThreshold\": discountThreshold\n}\n\nOBJECTIVE: We want to maximize the daily profit of the company, which is the total revenue minus the total cost.\n\nOUTPUT INFO: \n\n- \\var{dailyProfit} shows the daily profit of the company \n- \\var{unitsProduced_i} shows the number of units of the \\var{i}-th product produced\n- \\var{overtimeAssembly} shows the number of hours of overtime assembly labor scheduled\n- \\var{materialBought} shows the amount of raw materials bought\n\nOUTPUT FORMAT:\n\n{\n    \"dailyProfit\": dailyProfit,\n    \"unitsProduced\": [unitsProduced_i for i in 1, ..., N],\n    \"overtimeAssembly\": overtimeAssembly,\n    \"materialBought\": materialBought\n}", "data": {"N": 2, "AssemblyHour": [0.25, 0.3333], "TestingHour": [0.125, 0.3333], "MaterialCost": [1.2, 0.9], "MaxAssembly": 10, "MaxTesting": 70, "Price": [9, 8], "MaxOvertimeAssembly": 50, "OvertimeAssemblyCost": 5, "MaterialDiscount": 10, "DiscountThreshold": 300}, "obj": 339000, "order": "16"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- A manager of an oil refinery has \\var{allocated_i} million barrels of crude oil type \\var{i} allocated for production during the coming month. \n- These resources can be used to make \\var{P} different products. product \\var{p} sells for $ \\var{price_p} per barrel.\n- There are \\var{L} production processes. Process \\var{l} uses \\var{input_l_i} barrels of each crude \\var{i}, and produces \\var{output_l_p} barrels of each product \\var{p}. \n- Process \\var{l} has a cost of \\var{cost_l} per barrel of product produced.\n- All \\var{input_l_i} quantities and \\var{output_l_p} quanitites are in barrels. \n- There are no separate cost items for the cost of the crudes, as they have already been allocated.\n\nINPUT FORMAT: \n\n{\n    \"allocated\": [allocated_i for i in 1, ..., O],\n    \"price\": [price_p for p in 1, ..., P],\n    \"input\": [[input_l_i for i in 1, ..., O] for l in 1, ..., L],\n    \"output\": [[output_l_p for p in 1, ..., P] for l in 1, ..., L],\n    \"cost\": [cost_l for l in 1, ..., L]\n}\n\nOBJECTIVE: We want to know how many times should we execute each process to maximize the revenue for the next month (you can assume that the number of times that each process is executed is a floating point number)\n\nOUTPUT INFO:\n\n- \\var{revenue} is the total revenue for the month.\n- \\var{execute_l} is the number of times that process \\var{l} should be executed.\n\nOUTPUT FORMAT:\n\n{\n    \"revenue\": revenue,\n    \"execute\": [execute_l for l in 1, ..., L]\n}\n", "data": {"O": 2, "P": 2, "L": 3, "Allocated": [8000, 5000], "Price": [38, 33], "Input": [[3, 5], [1, 1], [5, 3]], "Output": [[4, 3], [1, 1], [3, 4]], "Cost": [51, 11, 40]}, "obj": 339000, "order": "17"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- An investor has a portfolio of \\var{N} different stocks.\n- He has bought \\var{bought_i} shares of stock \\var{i} at price \\var{buyPrice_i}. \n- The current price of one share of stock \\var{i} is \\var{currentPrice_i}.\n- The investor expects that the price of one share of stock \\var{i} in one year will be \\var{futurePrice_i}.\n- If he sells shares, the investor pays transaction costs at the rate of \\var{transactionRate} % of the amount transacted.\n- In addition, the investor pays taxes at the rate of \\var{taxRate} % on capital gains (i.e., the difference between the amount received from selling shares and the amount paid to buy them).\n- Both transaction costs and taxes are numbers between 0 and 100.\n- The investor wants to raise an amount of money \\var{K} net of capital gains and transaction costs.\n- You can assume that the investor can sell floating point numbers of shares.\n\nINPUT FORMAT: \n\n{\n    \"bought\": [bought_i, for i in 1, ..., N],\n    \"buyPrice\": [buyPrice_i, for i in 1, ..., N],\n    \"currentPrice\": [currentPrice_i, for i in 1, ..., N],\n    \"futurePrice\": [futurePrice_i, for i in 1, ..., N],\n    \"transactionRate\": transactionRate,\n    \"taxRate\": taxRate,\n    \"K\": K\n}\n\nOBJECTIVE: We want to know how many shares the investor needs to sell in order to raise the needed money, net of capital gains and transaction costs, while maximizing the expected value of his portfolio next year.\n\nOUTPUT INFO:\n\n- \\var{sell_i} is the number of shares of stock \\var{i} that the investor should sell.\n\nOUTPUT FORMAT:\n\n{\n    \"sell\": [sell_i, for i in 1, ..., N],\n}\n", "data": {"N": 3, "Bought": [100, 150, 80], "BuyPrice": [50, 40, 30], "CurrentPrice": [60, 35, 32], "FuturePrice": [65, 44, 34], "TransactionRate": 1.0, "TaxRate": 15.0, "K": 5000}, "obj": 10305.11226, "order": "18"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A food is manufactured by refining raw oils and blending them together. \n- The raw oils are either vegetable oils or non-vegetable oils. \n- Each oil \\var{i} may be purchased in month \\var{m} for price \\var{price_{i,m}}.\n- The final product sells at \\var{sell_price} per ton.\n- Vegetable oils and non-vegetable oils require different production lines for refining. \n- In any month, it is not possible to refine more than \\var{max_vegetable_refining_per_month} tons of vegetable oils and more than \\var{max_non_vegetable_refining_per_month} tons of non-vegetable oils. \n- There is no loss of weight in the refining process, and the cost of refining may be ignored.\n- It is possible to store up to \\var{storage_size} tons of each raw oil for use later. \n- The cost of storage for both vegetable and non-vegetable oil is \\var{storage_cost} per ton per month.\n- The final product cannot be stored, nor can refined oils be stored.\n- There is a technological restriction of hardness on the final product. \n- In the units in which hardness is measured, this must lie between \\var{max_hardness} and \\var{min_hardness}.\n- The hardness product is computed by the weighted average of hardness of each oil.\n- The hardness of oil \\var{i} is \\var{hardness_{i}}.\n- At present, there are \\var{init_amount} tons of each type of raw oil in storage. \n- We can assume that there is a month \"0\" to model the inital amount.\n- It is required that at the end of the last month, we still have the same amout of storage as \\var{init_amount}.\n- This means directly adding the constraint that the storage in the last month must be equal to \\var{init_amount}.\n\n\nINPUT FORMAT:\n\n{\n    \"buy_price\":[[price_{i, m} for i in 1,...,I] for m in 1,...,M],\n    \"sell_price\": sell_price,\n    \"is_vegetable\": [is_vegetable_{i} for i in 1,...,I],\n    \"max_vegetable_refining_per_month\": max_veg,\n    \"max_non_vegetable_refining_per_month\": max_non_veg,\n    \"storage_size\": storage_size,\n    \"storage_cost\": storage_cost,\n    \"max_hardness\": max_hardness,\n    \"min_hardness\": min_hardness,\n    \"hardness\": [hardness_{i} for i in 1,...,I],\n    \"init_amount\": init_amount\n}\n\n\nOBJECTIVE: What buying, storing and manufacturing policy should the company pursue in order to maximize profit?\n\nOUTPUT INFO: \n\n- \\var{buyquantity} represents the amount of buying quantity of each oil in each month\n- \\var{refine} represents the amount of refined quantity of each oil in each month\n- \\var{storage} represents the storage of each oil in each month\n \nOUTPUT FORMAT: \n\n{\n    \"buy\": [[buyquantity_{i, m} for i in 1,...,I] for m in 1,...M],\n    \"refine\": [[refine_{i, m} for i in 1,...,I] for m in 1,...M],\n    \"storage\": [[storage_{i, m} for i in 1,...,I] for m in 1,...,M]\n} \n", "data": {"M": 6, "I": 5, "BuyPrice": [[110, 120, 130, 110, 115], [130, 130, 110, 90, 115], [110, 140, 130, 100, 95], [120, 110, 120, 120, 125], [100, 120, 150, 110, 105], [90, 100, 140, 80, 135]], "SellPrice": 150, "IsVegetable": [true, true, false, false, false], "MaxVegetableRefiningPerMonth": 200, "MaxNonVegetableRefiningPerMonth": 250, "StorageSize": 1000, "StorageCost": 5, "MinHardness": 3, "MaxHardness": 6, "Hardness": [8.8, 6.1, 2.0, 4.2, 5.0], "InitialAmount": 500}, "obj": 107843.0, "order": "19"}
{"description": "PROBLEM TYPE: MIP\n\nPROBLEM INFO:\n\n- Digital Equipment Corporation (DEC) has introduced new families of \\var{N} computer systems with different memory, disk storage, and expansion capabilities.\n- Each system \\var{i} is either a general-purpose (GP) system or a workstation (WS) system.\n- Each system \\var{i} can have an integer number of disk drives, and on average \\var{disk_i} units of disk drive per system are requested by customers for system \\var{i}.\n- System \\var{i} uses \\var{mem_i} units of 256K memory boards per system on average.\n- System \\var{i} has a price of \\var{price_i} dollars.\n- The in-house supplier of CPUs for DEC could provide at most \\var{max_cpu} units, due to debugging problems.\n- The supply of disk drives is uncertain and is estimated by the manufacturer to be in the range of \\var{min_disk} to \\var{max_disk} units.\n- the supply of 256K memory boards is also limited in the range of \\var{min_mem} to \\var{max_mem} units.\n- Maximum demand for system \\var{i} in the next quarter is estimated to be \\var{demand_i} units.\n- Maximum demand for the whole GP family in the next quarter is estimated to be \\var{demand_GP} units.\n- Maximum demand for the whole WS family in the next quarter is estimated to be \\var{demand_WS} units.\n- Included in the projections, there are \\var{preorder_i} orders for system \\var{i} that have already been received and have to be fulfilled in the next quarter.\n- To address the shortage of 256K memory boards, DEC has access to \\var{alt_mem} units of an alternative memory board that can only be used in certain systems.\n- you can assume the number of systems produced is a floating point number to make the problem easier to solve.\n\nINPUT FORMAT:\n\n{\n    \"is_workstation\": [true/false for i in 1, ..., N],\n    \"price\": [price_i for i in 1, ..., N],\n    \"disk_drives\": [disk_i for i in 1, ..., N],\n    \"256K_boards\": [mem_i for i in 1, ..., N],\n    \"max_cpu\": max_cpu,\n    \"min_disk\": min_disk,\n    \"max_disk\": max_disk,\n    \"min_mem\": min_mem,\n    \"max_mem\": max_mem,\n    \"demand\": [demand_i for i in 1, ..., N],\n    \"demand_GP\": demand_GP,\n    \"demand_WS\": demand_WS,\n    \"preorder\": [preorder_i for i in 1, ..., N],\n    \"alt_mem\": alt_mem,\n    \"alt_compatible\": [true/false for i in 1, ..., N]\n}\n\n\n\nOBJECTIVE: How many of which system should DEC produce and using what memories and disks to maximize the profit for the next quarter?\n\n\nOUTPUT INFO:\n- A json file with \"system_output\" and \"profit\" as keys.\n- \"system_output\" contains a list of different types of systems produced \n- for each system, \\var{num_produced} is the number of systems produced, \\var{total_256K_boards_used} is the number of 256K memory boards used, \\var{total_alt_boards_used} is the number of alternative memory boards used, and \\var{total_disk_drives_used} is the number of disk drives used in that system.\n- \"profit\" is the total profit for the next quarter.\n\nOUTPUT FORMAT:\n\n{\n    \"system_output\": [\n        {\n            \"num_produced\": x_i,\n            \"total_256K_boards_used\": mem_used_i,\n            \"total_alt_boards_used\": alt_used_i,\n            \"total_disk_drives_used\": disk_used_i\n        }\n        for i in 1, ..., T\n    ],\n    \"profit\": profit\n}", "data": {"N": 5, "IsWorkstation": [false, false, false, true, true], "Price": [60000, 40000, 30000, 30000, 15000], "DiskDrives": [0.3, 1.7, 0, 1.4, 0], "MemoryBoards": [4, 2, 2, 2, 1], "Demand": [1800, 999999, 300, 999999, 999999], "Preorder": [0, 500, 0, 500, 400], "AltCompatible": [true, false, false, false, false], "MaxCpu": 7000, "MinDisk": 3000, "MaxDisk": 7000, "MinMemory": 8000, "MaxMemory": 16000, "DemandGP": 3800, "DemandWS": 3200, "AltMemory": 4000}, "obj": 271250000, "order": "2"}
{"description": "PROBLEM TYPE: LP or MILP\nPROBLEM INFO:\n\n- A food is manufactured by refining raw oils and blending them together. \n- The raw oils are either vegetable oils or non-vegetable oils. \n- Each oil \\var{i} may be purchased in month \\var{m} for price \\var{price_{i,m}}.\n- The final product sells at \\var{sell_price} per ton.\n- Vegetable oils and non-vegetable oils require different production lines for refining. \n- In any month, it is not possible to refine more than \\var{max_vegetable_refining_per_month} tons of vegetable oils and more than \\var{max_non_vegetable_refining_per_month} tons of non-vegetable oils. \n- There is no loss of weight in the refining process, and the cost of refining may be ignored.\n- It is possible to store up to \\var{storage_size} tons of each raw oil for use later. \n- The cost of storage for both vegetable and non-vegetable oil is \\var{storage_cost} per ton per month.\n- The final product cannot be stored, nor can refined oils be stored.\n- There is a technological restriction of hardness on the final product. \n- In the units in which hardness is measured, this must lie between \\var{max_hardness} and \\var{min_hardness}.\n- The hardness product is computed by the weighted average of hardness of each oil.\n- The hardness of oil \\var{i} is \\var{hardness_{i}}.\n- At present, there are \\var{init_amount} tons of each type of raw oil in storage. \n- We can assume that there is a month \"0\" to model the inital amount.\n- It is required that at the end of the last month, we still have the same amout of storage as \\var{init_amount}.\n- This means directly adding the constraint that the storage in the last month must be equal to \\var{init_amount}.\n- The food may never be made up of more than three oils in any month.\n- If an oil is used in a month, at least \\var{min_usage} tons must be used.\n- There are dependencies in the oil usage and \\var{dependency_{i, j}} shows this relation\n- If \\var{dependency_{i, j}} is 1, then when oil \\var{i} is used, oil \\var{j} must also be used\n\n\nINPUT FORMAT:\n\n{\n    \"buy_price\":[[price_{i, m} for i in 1,...,I] for m in 1,...,M],\n    \"sell_price\": sell_price,\n    \"is_vegetable\": [is_vegetable_{i} for i in 1,...,I],\n    \"max_vegetable_refining_per_month\": max_veg,\n    \"max_non_vegetable_refining_per_month\": max_non_veg,\n    \"storage_size\": storage_size,\n    \"storage_cost\": storage_cost,\n    \"max_hardness\": max_hardness,\n    \"min_hardness\": min_hardness,\n    \"hardness\": [hardness_{i} for i in 1,...,I],\n    \"init_amount\": init_amount,\n    \"min_usage\": min_usage,\n    \"dependencies\": [dependency_{i} for i in 1,...,I]\n}\n\n\nOBJECTIVE: What buying, storing and manufacturing policy should the company pursue in order to maximize profit?\n\nOUTPUT INFO: \n\n- \\var{buyquantity} represents the amount of buying quantity of each oil in each month\n- \\var{refine} represents the amount of refined quantity of each oil in each month\n- \\var{storage} represents the storage of each oil in each month\n \nOUTPUT FORMAT: \n\n{\n    \"buy\": [[buyquantity_{i, m} for i in 1,...,I] for m in 1,...M],\n    \"refine\": [[refine_{i, m} for i in 1,...,I] for m in 1,...M],\n    \"storage\": [[storage_{i, m} for i in 1,...,I] for m in 1,...,M]\n} ", "data": {"buy_price": [[110, 120, 130, 110, 115], [130, 130, 110, 90, 115], [110, 140, 130, 100, 95], [120, 110, 120, 120, 125], [100, 120, 150, 110, 105], [90, 100, 140, 80, 135]], "sell_price": 150, "is_vegetable": [true, true, false, false, false], "max_vegetable_refining_per_month": 200, "max_non_vegetable_refining_per_month": 250, "storage_size": 1000, "storage_cost": 5, "min_hardness": 3, "max_hardness": 6, "hardness": [8.8, 6.1, 2.0, 4.2, 5.0], "init_amount": 500, "min_usage": 20, "dependencies": [[0, 0, 0, 0, 1], [0, 0, 0, 0, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]}, "obj": 3000.0, "order": "20"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- An engineering factory makes several products on the machines, and the number of machine \\var{m} the factory has is \\var{num_{m}}.\n- Each product \\var{k} yields \\var{profit_{k}} to profit (defined as Â£/unit selling price minus cost of raw materials).\n- The unit production times (hours) product \\var{k} requires on machine \\var{m} is \\var{time_{k, m}}\n- In the present month (January) and several subsequent months, certain machines will be down for maintenance.\n- In month \\var{i}, the number of machine \\var{m} that will be down is \\var{maintain_{i, m}}.\n- There are marketing limitations on each product in each month. \n- The limitation of product \\var{k} in month \\var{i} is \\var{limit_{k, i}}.\n- It is possible to store up to 100 of each product at a time at a cost of \\var{store_price} per unit per month. \n- There are no stocks at present, but we should have a stock of \\var{keep_quantity} of each type of product at the end of subsequent months.\n- The factory works six days a week with \\var{n_workhours} hours each day. \n- No sequencing problems need to be considered.\n- We can assume that a month has 24 days for convenience.\n\nINPUT FORMAT:\n\n{\n    \"num_machines\": [num_{m} for m in 1,...,M],\n    \"profit\": [profit_{k} for k in 1,...K],\n    \"time\": [[time_{k, m} for m in 1,...,M] for k in 1,...,K],\n    \"maintain\": [[maintain_{i, m} for m in 1,...,M] for i in 1,...,I],\n    \"limit\": [[limit_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"store_price\": store_price,\n    \"keep_quantity\": keep_quantity,\n    \"n_workhours\": n_workhours\n}\n\nOBJECTIVE: What selling, storing and manufacturing policy should the company pursue in order to maximize profit?\n\nOUTPUT INFO:\n\n- \\var{sell} represents the amount of selling quantity of each product in each month\n- \\var{manufacture} represents the amount of manufactured products in each month\n- \\var{storage} represents the storage of each product in each month\n\nOUTPUT FORMAT:\n\n{\n    \"sell\": [[sell_{k, i} for k in 1,...,K] for i in 1,...I],\n    \"manufacture\": [[manufacture_{k, i} for k in 1,...,K] for i in 1,...I],\n    \"storage\": [[storage_{k, i} for k in 1,...,K] for i in 1,...,I]\n}\n", "data": {"num_machines": [4, 2, 3, 1, 1], "profit": [10, 6, 8, 4, 11, 9, 3], "time": [[0.5, 0.1, 0.2, 0.05, 0.0], [0.7, 0.2, 0.0, 0.03, 0.0], [0.0, 0.0, 0.8, 0.0, 0.01], [0.0, 0.3, 0.0, 0.07, 0.0], [0.3, 0.0, 0.0, 0.1, 0.05], [0.5, 0.0, 0.6, 0.08, 0.05]], "maintain": [[1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0], [0, 2, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1]], "limit": [[500, 600, 300, 200, 0, 500], [1000, 500, 600, 300, 100, 500], [300, 200, 0, 400, 500, 100], [300, 0, 0, 500, 100, 300], [800, 400, 500, 200, 1000, 1100], [200, 300, 400, 0, 300, 500], [100, 150, 100, 100, 0, 60]], "store_price": 0.5, "keep_quantity": 100, "n_workhours": 8.0}, "obj": 93715.0, "order": "21"}
{"description": "PROBLEM TYPE: MILP\nPROBLEM INFO:\n\n- An engineering factory makes several products on the machines, and the number of machine \\var{m} the factory has is \\var{num_{m}}.\n- Each product \\var{k} yields \\var{profit_{k}} to profit (defined as Â£/unit selling price minus cost of raw materials).\n- The unit production times (hours) product \\var{k} requires on machine \\var{m} is \\var{time_{k, m}}\n- In the present month (January) and several subsequent months, certain machines will be down for maintenance.\n- Each machine \\var{m} has to be down for \\var{down_{m}} months for maintenance.\n- There are marketing limitations on each product in each month. \n- The limitation of product \\var{k} in month \\var{i} is \\var{limit_{k, i}}.\n- It is possible to store up to 100 of each product at a time at a cost of \\var{store_price} per unit per month. \n- There are no stocks at present, but it is desired to have a stock of \\var{keep_quantity} of each type of product at the end of subsequent months.\n- The factory works a six days a week with two shifts of \\var{n_workhours} hours each day. \n- No sequencing problems need to be considered.\n- We can assume that a month has 24 days for convenience.\n\n\nINPUT FORMAT:\n\n{\n    \"num_machines\": [num_{m} for m in 1,...,M],\n    \"profit\": [profit_{k} for k in 1,...K],\n    \"time\": [[time_{k, m} for m in 1,...,M] for k in 1,...,K],\n    \"down\": [down_{m} for m in 1,...,M]\n    \"limit\": [[limit_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"store_price\": store_price,\n    \"keep_quantity\": keep_quantity,\n    \"n_workhours\": n_workhours\n}\n\nOBJECTIVE: What maintaining, selling, storing and manufacturing policy should the company pursue in order to maximize profit?\n\nOUTPUT INFO:\n\n- \\var{sell} represents the amount of selling quantity of each product in each month\n- \\var{manufacture} represents the amount of manufactured products in each month\n- \\var{storage} represents the storage of each product in each month\n- \\var{maintain} represents the number of machines in each type that are under maintenance in each month\n\nOUTPUT FORMAT:\n\n{\n    \"sell\": [[sell_{k, i} for k in 1,...,K] for i in 1,...I],\n    \"manufacture\": [[manufacture_{k, i} for k in 1,...,K] for i in 1,...I],\n    \"storage\": [[storage_{k, i} for k in 1,...,K] for i in 1,...,I],\n    \"maintain\": [[maintain_{m, k} for m in 1,...,M] for k in 1,...,K]\n}\n", "data": {"num_machines": [4, 2, 3, 1, 1], "profit": [10, 6, 8, 4, 11, 9, 3], "time": [[0.5, 0.1, 0.2, 0.05, 0.0], [0.7, 0.2, 0.0, 0.03, 0.0], [0.0, 0.0, 0.8, 0.0, 0.01], [0.0, 0.3, 0.0, 0.07, 0.0], [0.3, 0.0, 0.0, 0.1, 0.05], [0.5, 0.0, 0.6, 0.08, 0.05]], "down": [[0, 1, 1, 1, 1]], "limit": [[500, 600, 300, 200, 0, 500], [1000, 500, 600, 300, 100, 500], [300, 200, 0, 400, 500, 100], [300, 0, 0, 500, 100, 300], [800, 400, 500, 200, 1000, 1100], [200, 300, 400, 0, 300, 500], [100, 150, 100, 100, 0, 60]], "store_price": 0.5, "keep_quantity": 100, "n_workhours": 8.0}, "obj": 93715.0, "order": "22"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A company is undergoing a number of changes that will affect its manpower requirements in future years. \n- Owing to the installation of new machinery, fewer unskilled but more skilled and semi-skilled workers will be required. \n- In addition to this, a downturn in trade is expected in the next year, which will reduce the need for workers in all categories.\n- The estimated manpower requirements for manpower \\var{k} in year \\var{i} is \\var{requirement_{k, i}}.\n- The current number of manpower \\var{k} is \\var{strength_{k}}.\n- The company wishes to decide its policy with regard to recruitment, retraining, redundancy and short-time working in the next years.\n- There is a natural wastage of labour. \n- A fairly large number of workers leave during their first year. After this, the rate of leaving is much smaller. \n- Taking this into account, the wastage rates of manpower \\var{k} with less than one year's service is \\var{lessonewaste_{k}}.\n- The wastage rates of \\var{k} manpower with more than one year's service is \\var{moreonewaste_{k}}.\n- There has been no recent recruitment and all the workers in the current labour force have been employed for more than one year.\n- It is possible to recruit a limited number of workers from outside. \n- In any one year, the maximum number that can be recruited in manpower \\var{k} is \\var{recruit_{k}}.\n- The redundancy payment to manpower \\var{k} is \\var{costredundancy_{k}}.\n- It is possible to employ up to \\var{num_overman} more workers over the whole company than are needed, but the extra costs per employee per year is \\var{costoverman_{k}} for manpower \\var{k}.\n- Up to \\var{num_shortwork} workers in each category of skill can be put on short-time working. \n- The cost of this (per employee per year) is \\var{costshort_{k}} for manpower \\var{k}.\n- An employee on short-time working meets the production requirements of half a full-time employee.\n\n\nINPUT FORMAT:\n\n{\n    \"requirement\": [[requirement_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"strength\": [strength_{k} for k in 1,...,K],\n    \"lessonewaste\": [lessonewaste_{k} for k in 1,...,K],\n    \"moreonewaste\": [lessonewaste_{k} for k in 1,...,K],\n    \"recruit\": [recruit_{k} for k in 1,...,K],\n    \"costredundancy\": [costredundancy_{k} for k in 1,...,K],\n    \"num_overman\": num_overman,\n    \"costoverman\": [costoverman_{k} for k in 1,...,K],\n    \"num_shortwork\": num_shortwork\n    \"costshort\": [costshort_{k} for k in 1,...,K],\n}\n\n\nOBJECTIVE: The companyâ€™s declared objective is to minimize redundancy. How should they operate in order to do this?\n\nOUTPUT INFO:\n\n- \\var{recruit} represents the number of each recruit manpower to employ each year\n- \\var{overmanning} represents the number of each overmanning manpower to employ each year\n- \\var{short} represents the number of each short-time manpower to employ each year\n\nOUTPUT FORMAT:\n\n{\n    \"recruit\": [[recruit_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"overmanning\": [[overmanning_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"short\": [[short_{k, i} for i in 1,...,I] for k in 1,...,K]\n}", "data": {"requirement": [[1000, 1400, 1000], [500, 2000, 1500], [0, 2500, 2000]], "strength": [2000, 1500, 1000], "lessonewaste": [0.25, 0.2, 0.1], "moreonewaste": [0.1, 0.05, 0.05], "recruit": [500, 800, 500], "costredundancy": [200, 500, 500], "num_overman": 150, "costoverman": [1500, 2000, 3000], "num_shortwork": 50, "costshort": [500, 400, 400]}, "obj": 1438383.0, "order": "23"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A company is undergoing a number of changes that will affect its manpower requirements in future years. \n- Owing to the installation of new machinery, fewer unskilled but more skilled and semi-skilled workers will be required. \n- In addition to this, a downturn in trade is expected in the next year, which will reduce the need for workers in all categories.\n- The estimated manpower requirements for manpower \\var{k} in year \\var{i} is \\var{requirement_{k, i}}.\n- The current strength of manpower \\var{k} is \\var{strength_{k}}.\n- The company wishes to decide its policy with regard to recruitment, retraining, redundancy and short-time working in the next years.\n- There is a natural wastage of labour. \n- A fairly large number of workers leave during their first year. After this, the rate is much smaller. \n- Taking this into account, the wastage rates of \\var{k} manpower with less than one year's service is \\var{lessonewaste_{k}}.\n- The wastage rates of \\var{k} manpower with more than one year's service is \\var{moreonewaste_{k}}.\n- There has been no recent recruitment and all workers in the current labour force have been employed for more than one year.\n- It is possible to recruit a limited number of workers from outside. \n- In any one year, the numbers that can be recruited in manpower \\var{k} is \\var{recruit_{k}}.\n- The redundancy payment to manpower \\var{k} is \\var{costredundancy_{k}}.\n- It is possible to employ up to \\var{num_overman} more workers over the whole company than are needed, but the extra costs per employee per year is \\var{costoverman_{k}} for manpower \\var{k}.\n- Up to \\var{num_shortwork} workers in each category of skill can be put on short-time working. \n- The cost of this (per employee per year) is \\var{costshort_{k}} for manpower \\var{k}.\n- An employee on short-time working meets the production requirements of half a full-time employee.\n\n\nINPUT FORMAT:\n\n{\n    \"requirement\": [[requirement_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"strength\": [strength_{k} for k in 1,...,K],\n    \"lessonewaste\": [lessonewaste_{k} for k in 1,...,K],\n    \"moreonewaste\": [lessonewaste_{k} for k in 1,...,K],\n    \"recruit\": [recruit_{k} for k in 1,...,K],\n    \"costredundancy\": [costredundancy_{k} for k in 1,...,K],\n    \"num_overman\": num_overman,\n    \"costoverman\": [costoverman_{k} for k in 1,...,K],\n    \"num_shortwork\": num_shortwork\n    \"costshort\": [costshort_{k} for k in 1,...,K],\n}\n\n\nOBJECTIVE: The companyâ€™s declared objective is to minimize costs. How should they operate in order to do this?\n\nOUTPUT INFO:\n\n- \\var{recruit} represents the number of each recruit manpower to employ each year\n- \\var{overmanning} represents the number of each overmanning manpower to employ each year\n- \\var{short} represents the number of each short-time manpower to employ each year\n\nOUTPUT FORMAT:\n\n{\n    \"recruit\": [[recruit_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"overmanning\": [[overmanning_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"short\": [[short_{k, i} for i in 1,...,I] for k in 1,...,K]\n}", "data": {"requirement": [[1000, 1400, 1000], [500, 2000, 1500], [0, 2500, 2000]], "strength": [2000, 1500, 1000], "lessonewaste": [0.25, 0.2, 0.1], "moreonewaste": [0.1, 0.05, 0.05], "recruit": [500, 800, 500], "costredundancy": [200, 500, 500], "num_overman": 150, "costoverman": [1500, 2000, 3000], "num_shortwork": 50, "costshort": [500, 400, 400]}, "obj": 498677.0, "order": "24"}
{"description": "PROBLEM TYPE: MIP\nPROBLEM INFO:\n\n- A mining company is going to continue operating in a certain area for the next years. \n- There are \\var{n_mines} mines in this area, but it can operate at most \\var{n_maxwork} in any one year. \n- Although a mine may not operate in a certain year, it is still necessary to keep it â€˜openâ€™, in the sense that royalties are payable, if it be operated in a future year. \n- Clearly, if a mine is not going to be worked again, it can be permanently closed down and no more royalties need be paid. \n- The yearly royalties payable on each mine kept â€˜openâ€™ is \\var{royalty_{k}} for mine \\var{k}.\n- There is an upper limit to the amount of ore, which can be extracted from each mine in a year. \n- The upper limit for mine \\var{k} is \\var{limit_{k}}.\n- The ore from the different mines is of varying quality.\n- This quality is measured on a scale so that blending ores together results in a linear combination of the quality measurements, for example, if equal quantities of two ores were combined, the resultant ore would have a quality measurement half way between\nthat of the ingredient ores. \n- The quality of ore from mine \\var{k} is \\var{quality_{k}}.\n- In each year, it is necessary to combine the total outputs from each mine to produce a blended ore of exactly some stipulated quality.\n- In year \\var{i}, the required quality is \\var{requiredquality_{i}}.\n- The final blended ore sells for \\var{price} ton each year. \n- Revenue and expenditure for future years must be discounted at a rate of \\var{discount} per annum.\n\nINPUT FORMAT:\n\n{\n    \"n_mines\": n_mines,\n    \"n_maxwork\": n_maxwork,\n    \"royalty\": [royalty_{k} for k in 1,...,K],\n    \"limit\": [limit_{k} for k in 1,...,K],\n    \"quality\": [quality_{k} for k in 1,...,K],\n    \"requiredquality\": [requiredquality_{i} for i in 1,...,I],\n    \"price\": price,\n    \"discount\": discount\n}\n\n\nOBJECTIVE: To maximize profit, which mines should be operated each year and how much should they produce?\n\nOUTPUT INFO:\n\n- \\var{isoperated} represents whether each mine is operated in each year\n- \\var{amount} represents the amount of ore produced by each mine in each year\n\nOUTPUT FORMAT:\n\n{\n    \"isoperated\": [[isoperated_{k, i} for i in 1,...,I] for k in 1,...K]\n    \"amount\": [[amount_{k, i} for i in 1,...,I] for k in 1,...K]\n}", "data": {"n_mines": 4, "n_maxwork": 3, "royalty": [5000000.0, 4000000.0, 4000000.0, 5000000.0], "limit": [2000000.0, 2500000.0, 1300000.0, 3000000.0], "quality": [1.0, 0.7, 1.5, 0.5], "requiredquality": [0.9, 0.8, 1.2, 0.6, 1.0], "price": 10, "discount": 0.1}, "obj": 2142, "order": "25"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A farmer wishes to plan production on his \\var{all_space} acre farm over the next five years. \n- At present, he has a herd of 120 cows. \n- This is made up of \\var{n_heifers} heifers and \\var{n_milk} milk-producing cows. \n- Each heifer needs \\var{heifer_space} acre to support it and each dairy cow \\var{cow_space} acre. \n- A dairy cow produces an average of \\var{cow_calve} calves per year. \n- Half of these calves will be bullocks, which are sold almost immediately for an average of \\var{price_bullock} each. \n- The remaining heifers can be either sold almost immediately for \\var{price_heifer} or reared to become milk-producing cows at two years old. \n- It is intended that all dairy cows be sold at 12 years old for an average of \\var{price_cow} each, although there will probably be an annual loss of \\var{loss_heifer} per year among heifers and \\var{loss_cow} among dairy cows. \n- At present, there are 10 cows each aged from newborn to 11 years old. \n- The decision of how many heifers to sell in the current year has already been taken and implemented.\n- The milk from a cow yields an annual revenue of \\var{revenue_milk}. \n- A maximum of \\var{n_maxcow} cows can be housed at the present time. \n- To provide accommodation for each cow beyond this number will entail a capital outlay of \\var{cow_outlay} per cow. \n- Each milk- producing cow requires \\var{cow_grain} tons of grain and \\var{cow_sugar} tons of sugar beet per year. \n- Grain and sugar beet can both be grown on the farm. \n- Each acre yields \\var{sugar_per_acre} tons of sugar beet. \n- Only \\var{space_grain} acres are suitable for growing grain. \n- They can be divided into groups.\n- Group \\var{k} has space \\var{graindivision_{k}} and yields \\var{yield_{k}} tons per acre.\n- Grain can be bought for \\var{buyprice_grain} per ton and sold for \\var{sellprice_grain} per ton. \n- Sugar beet can be bought for \\var{buyprice_sugar} per ton and sold for \\var{sellprice_sugar} per ton.\n- Each heifer requires \\var{labour_heifers} hours of labour per year.\n- Each milk-producing cow requires \\var{labour_cow} hours of labour per year.\n- Each acre put into grain requires \\var{labour_grain} hours of labour per year.\n- Each acre put into sugar beet requires \\var{labour_sugar} hours of labour per year.\n- There are also extra costs.\n- Each heifer requires \\var{extra_heifers} per year.\n- Each milk-producing cow requires \\var{extra_cow} per year.\n- Each acre put into grain requires \\var{extra_grain} per year.\n- Each acre put into sugar beet requires \\var{extra_sugar} per year.\n- Labour costs for the farm are at present \\var{labour_cost} per year and provide \\var{labour_hour} labour. \n- Any labour needed above this will cost \\var{extra_labour_cost} per hour.\n- Any capital expenditure would be financed by a 10-year loan at 15% annual interest. \n- The interest and capital repayment would be paid in 10 equally sized yearly installments. \n- In no year can the cash flow be negative. \n- Finally, the farmer would neither wish to reduce the total number of dairy cows at the end of the five-year period by more than 50% nor wish to increase the number by more than 75%.\n\n\nINPUT FORMAT:\n\n{\n    \"all_space\": all_space,\n    \"n_heifers\": n_heifers,\n    \"n_milk\": n_milk,\n    \"heifer_space\": heifer_space,\n    \"cow_space\": cow_space,\n    \"cow_calve\": cow_calve,\n    \"price_bullock\": price_bullock,\n    \"price_heifer\": price_heifer,\n    \"price_cow\": price_cow,\n    \"loss_heifer\": loss_heifer,\n    \"loss_cow\": loss_cow,\n    \"revenue_milk\": revenue_milk,\n    \"n_maxcow\": n_maxhouse,\n    \"cow_outlay\": cow_outlay,\n    \"cow_grain\": cow_grain,\n    \"cow_sugar\": cow_sugar,\n    \"sugar_per_acre\": sugar_per_acre,\n    \"space_grain\": space_grain,\n    \"graindivision\": [graindivision_{k} for k in 1,...,K],\n    \"yield\": [yield_{k} for k in 1,...,K],\n    \"buyprice_grain\": buyprice_grain,\n    \"sellprice_grain\": sellprice_grain,\n    \"buyprice_sugar\": buyprice_sugar,\n    \"sellprice_sugar\": sellprice_sugar,\n    \"labour_heifers\": labour_heifers,\n    \"labour_cow\": labour_cow,\n    \"labour_grain\": labour_grain,\n    \"labour_sugar\": labour_sugar,\n    \"extra_heifers\": extra_heifers,\n    \"extra_cow\": extra_cow,\n    \"extra_grain\": extra_grain,\n    \"extra_sugar\": extra_sugar,\n    \"labour_cost\": labour_cost,\n    \"labour_hour\": labour_hour,\n    \"extra_labour_cost\": extra_labour_cost\n}\n\nOBJECTIVE: How should the farmer operate over the next five years to maximize profit?\n\nOUTPUT INFO:\n\n- \\var{sellheifer} represents the amount of heifer to sell in future five years\n- \\var{spacegrain} represents how much space should be used for grain each year\n- \\var{spacesugar} represents how much space should be used for sugar beet each year\n\nOUTPUT FORMAT:\n\n{\n    \"sellheifer\": [sellheifer_{i} for i = 1,...,5]\n    \"spacegrain\": [spacegrain_{i} for i = 1,...,5]\n    \"spacesugar\": [spacesugar_{i} for i = 1,...,5]\n}\n", "data": {"all_space": 200, "n_heifers": 20, "n_milk": 100, "heifer_space": 0.666667, "cow_space": 1, "cow_calve": 1.1, "price_bullock": 30, "price_heifer": 40, "price_cow": 120, "loss_heifer": 0.05, "loss_cow": 0.02, "revenue_milk": 370, "n_maxcow": 130, "cow_outlay": 200, "cow_grain": 0.6, "cow_sugar": 0.7, "sugar_per_acre": 1.5, "space_grain": 80, "graindivision": [20, 30, 20, 10], "yield": [1.1, 0.9, 0.8, 0.65], "buyprice_grain": 90, "sellprice_grain": 75, "buyprice_sugar": 70, "sellprice_sugar": 58, "labour_heifers": 10, "labour_cow": 42, "labour_grain": 4, "labour_sugar": 14, "extra_heifers": 50, "extra_cow": 100, "extra_grain": 15, "extra_sugar": 10, "labour_cost": 4000, "labour_hour": 5500, "extra_labour_cost": 1.2}, "order": "26"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- An economy consists of several industries. \n- Each unit produced by one of the industries (a unit will be taken as Â£1â€™s worth of value of production) requires inputs from possibly its own industry as well as other industries. \n- Industry \\var{k} requires \\var{inputone_{k, j}} input from industy \\var{j}.\n- Industry \\var{k} requires \\var{manpowerone_{k}} units of manpower.\n- There is a time lag in the economy so that the output in year t + 1 requires an input in year t.\n- Output from an industry may also be used to build productive capacity for itself or other industries in future years.\n- To give unit increases (capacity for Â£1â€™s worth of extra production) in productive capacity of industry \\var{k}, \\var{j} units of industry \\var{inputtwo_{k, j}} and \\var{manpowertwo{k}} units of manpower are needed.\n- Input from an industry in year t results in a (permanent) increase in productive capacity in year t + 2.\n- Stocks of goods may be held from year to year. \n- At present (year 0), the stocks of industry \\var{k} is \\var{stock_{k}}, and the capacity of industry \\var{k} is \\var{capacity_{k}}.\n- There is a limited yearly manpower capacity of \\var{manpower_limit}.\n- An exogenous consumption requirement of \\var{demand_{k}} units from industry \\var{k} has to be satisfied in every year except year 0.\n\n\nINPUT FORMAT:\n\n{\n    \"inputone\": [[inputone_{k, j} for j in 1,...,K] for k in 1,...,K],\n    \"manpowerone\": [manpowerone_{k} for k in 1,...,K],\n    \"inputtwo\": [[inputtwo_{k, j} for j in 1,...,K] for k in 1,...,K],\n    \"manpowertwo\": [manpowertwo_{k} for k in 1,...,K],\n    \"stock\": [stock_{k} for k in 1,...,K],\n    \"capacity\": [capacity_{k} for k in 1,...,K],\n    \"manpower_limit\": manpower_limit,\n    \"demand\": [demand_{k} for k in 1,...,K]\n}\n\nOBJECTIVE: Maximize total productive capacity at the end of the five years.\n\nOUTPUT INFO:\n\n- \\var{produce} represents the amount of units produced by each industry in each year\n- \\var{buildcapa} represents the amount of units used to build productive capacity for each industry in each year\n- \\var{stockhold} represents the amount of stock of each industry held in each year\n\nOUTPUT FORMAT:\n\n{\n    \"produce\": [[produce_{k, t} for t in 1,...,T] for k in 1,...,K],\n    \"buildcapa\": [[buildcapa_{k, t} for t in 1,...,T] for k in 1,...,K],\n    \"stockhold\": [[stock_{k, t} for t in 1,...,T] for for k in 1,...,K]\n}", "data": {"inputone": [[0.1, 0.1, 0.2], [0.5, 0.1, 0.1], [0.5, 0.2, 0.2]], "manpowerone": [0.6, 0.3, 0.2], "inputtwo": [[0.0, 0.1, 0.2], [0.7, 0.1, 0.1], [0.9, 0.2, 0.2]], "manpowertwo": [0.4, 0.2, 0.1], "stock": [150, 80, 100], "capacity": [300, 350, 280], "manpower_limit": 470000000.0, "demand": [60000000.0, 60000000.0, 30000000.0]}, "order": "27"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- An economy consists of several industries. \n- Each unit produced by one of the industries (a unit will be taken as Â£1â€™s worth of value of production) requires inputs from possibly its own industry as well as other industries. \n- Industry \\var{k} requires \\var{inputone_{k, j}} input from industy \\var{j}.\n- Industry \\var{k} requires \\var{manpowerone_{k}} units of manpower.\n- There is a time lag in the economy so that the output in year t + 1 requires an input in year t.\n- Output from an industry may also be used to build productive capacity for itself or other industries in future years.\n- To give unit increases (capacity for Â£1â€™s worth of extra production) in productive capacity of industry \\var{k}, \\var{j} units of industry \\var{inputtwo_{k, j}} and \\var{manpowertwo{k}} units of manpower are needed.\n- Input from an industry in year t results in a (permanent) increase in productive capacity in year t + 2.\n- Stocks of goods may be held from year to year. \n- At present (year 0), the stocks of industry \\var{k} is \\var{stock_{k}}, and the capacity of industry \\var{k} is \\var{capacity_{k}}.\n- There is a limited yearly manpower capacity of \\var{manpower_limit}.\n\n\nINPUT FORMAT:\n\n{\n    \"inputone\": [[inputone_{k, j} for j in 1,...,K] for k in 1,...,K],\n    \"manpowerone\": [manpowerone_{k} for k in 1,...,K],\n    \"inputtwo\": [[inputtwo_{k, j} for j in 1,...,K] for k in 1,...,K],\n    \"manpowertwo\": [manpowertwo_{k} for k in 1,...,K],\n    \"stock\": [stock_{k} for k in 1,...,K],\n    \"capacity\": [capacity_{k} for k in 1,...,K],\n    \"manpower_limit\": manpower_limit,\n}\n\n\nOBJECTIVE: Maximize total production in the last two years.\n\nOUTPUT INFO:\n\n- \\var{produce} represents the amount of units produced by each industry in each year\n- \\var{buildcapa} represents the amount of units used to build productive capacity for each industry in each year\n- \\var{stockhold} represents the amount of stock of each industry held in each year\n\nOUTPUT FORMAT:\n\n{\n    \"produce\": [[produce_{k, t} for t in 1,...,T] for k in 1,...,K],\n    \"buildcapa\": [[buildcapa_{k, t} for t in 1,...,T] for k in 1,...,K],\n    \"stockhold\": [[stock_{k, t} for t in 1,...,T] for for k in 1,...,K]\n}", "data": {"inputone": [[0.1, 0.1, 0.2], [0.5, 0.1, 0.1], [0.5, 0.2, 0.2]], "manpowerone": [0.6, 0.3, 0.2], "inputtwo": [[0.0, 0.1, 0.2], [0.7, 0.1, 0.1], [0.9, 0.2, 0.2]], "manpowertwo": [0.4, 0.2, 0.1], "stock": [150, 80, 100], "capacity": [300, 350, 280], "manpower_limit": 470000000.0}, "obj": 2619, "order": "28"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- An economy consists of several industries. \n- Each unit produced by one of the industries (a unit will be taken as Â£1â€™s worth of value of production) requires inputs from possibly its own industry as well as other industries. \n- Industry \\var{k} requires \\var{inputone_{k, j}} input from industy \\var{j}.\n- Industry \\var{k} requires \\var{manpowerone_{k}} units of manpower.\n- There is a time lag in the economy so that the output in year t + 1 requires an input in year t.\n- Output from an industry may also be used to build productive capacity for itself or other industries in future years.\n- To give unit increases (capacity for Â£1â€™s worth of extra production) in productive capacity of industry \\var{k}, \\var{j} units of industry \\var{inputtwo_{k, j}} and \\var{manpowertwo{k}} units of manpower are needed.\n- Input from an industry in year t results in a (permanent) increase in productive capacity in year t + 2.\n- Stocks of goods may be held from year to year. \n- At present (year 0), the stocks of industry \\var{k} is \\var{stock_{k}}, and the capacity of industry \\var{k} is \\var{capacity_{k}}.\n- An exogenous consumption requirement of \\var{demand_{k}} units from industry \\var{k} has to be satisfied in every year except year 0.\n\n\nINPUT FORMAT:\n\n{\n    \"inputone\": [[inputone_{k, j} for j in 1,...,K] for k in 1,...,K],\n    \"manpowerone\": [manpowerone_{k} for k in 1,...,K],\n    \"inputtwo\": [[inputtwo_{k, j} for j in 1,...,K] for k in 1,...,K],\n    \"manpowertwo\": [manpowertwo_{k} for k in 1,...,K],\n    \"stock\": [stock_{k} for k in 1,...,K],\n    \"capacity\": [capacity_{k} for k in 1,...,K],\n    \"demand\": [demand_{k} for k in 1,...,K]\n}\n\n\nOBJECTIVE: Maximize the total manpower requirement over five years\n\nOUTPUT INFO:\n\n- \\var{produce} represents the amount of units produced by each industry in each year\n- \\var{buildcapa} represents the amount of units used to build productive capacity for each industry in each year\n- \\var{stockhold} represents the amount of stock of each industry held in each year\n\nOUTPUT FORMAT:\n\n{\n    \"produce\": [[produce_{k, t} for t in 1,...,T] for k in 1,...,K],\n    \"buildcapa\": [[buildcapa_{k, t} for t in 1,...,T] for k in 1,...,K],\n    \"stockhold\": [[stock_{k, t} for t in 1,...,T] for for k in 1,...,K]\n}", "data": {"inputone": [[0.1, 0.1, 0.2], [0.5, 0.1, 0.1], [0.5, 0.2, 0.2]], "manpowerone": [0.6, 0.3, 0.2], "inputtwo": [[0.0, 0.1, 0.2], [0.7, 0.1, 0.1], [0.9, 0.2, 0.2]], "manpowertwo": [0.4, 0.2, 0.1], "stock": [150, 80, 100], "capacity": [300, 350, 280], "demand": [60000000.0, 60000000.0, 30000000.0]}, "obj": 2450, "order": "29"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- A state wants to plan its electricity capacity for the next \\var{T} years. \n- The state has a forecast of \\var{demand_t} megawatts, presumed accurate, of the demand for electricity during year \\var{t}.\n- The existing capacity, which is in oil-fired plants, that will not be retired and will be available during year \\var{t}, is \\var{oil_t}.\n- There are two alternatives for expanding electric capacity: coalÂ­ fired or nuclear power plants.\n- There is a capital cost of \\var{coal_cost} per megawatt of coal-fired capacity that becomes operational at the beginning of year \\var{t}.\n- There is a capital cost of \\var{nuke_cost} per megawatt of nuclear power capacity that becomes operational at the beginning of year \\var{t}.\n- For various political and safety reasons, it has been decided that no more than \\var{max_nuke}% of the total capacity should ever be nuclear (\\var{max_nuke} is a number between 0 and 100).\n- Coal plants last for \\var{coal_life} years, while nuclear plants last for \\var{nuke_life} years.\n\nINPUT FORMAT: \n\n{\n    \"demand\": [demand_t for t in 1, ..., T],\n    \"oil_cap\": [oil_t for t in 1, ..., T],\n    \"coal_cost\": coal_cost,\n    \"nuke_cost\": nuke_cost,\n    \"max_nuke\": max_nuke,\n    \"coal_life\": coal_life,\n    \"nuke_life\": nuke_life,\n}\n\n\nOBJECTIVE: What is the capacity expansion plan that results in the minimum cost?\n\n\nOUTPUT INFO:\n\n- the output should represent how much coal and nuclear capacity should be added in each year, and how much the total cost is.\n- the output should be a dictionary with three keys: \"coal_cap_added\", \"nuke_cap_added\", and \"total_cost\".\n- the value of \"coal_cap_added\" should be a list of the coal capacity added in each year.\n- the value of \"nuke_cap_added\" should be a list of the nuclear capacity added in each year.\n- the value of \"total_cost\" should be a single floating point number showing the total cost of the system.\n\n\nOUTPUT FORMAT:\n\n{\n    \"coal_cap_added\": [coal_t for t in 1, ..., T],\n    \"nuke_cap_added\": [nuke_t for t in 1, ..., T],\n    \"total_cost\": total_cost,\n}\n\n", "data": {"T": 12, "Demand": [10, 15, 17, 20, 13, 19, 10, 25, 30, 33, 30, 35], "OilCap": [15, 14, 13, 10, 10, 7, 5, 5, 5, 5, 5, 5], "CoalCost": 10, "NukeCost": 5, "MaxNuke": 20, "CoalLife": 5, "NukeLife": 10}, "obj": 353.0, "order": "3"}
{"description": "PROBLEM TYPE: MIP\nPROBLEM INFO:\n\n- A large company wishes to move some of its departments out of London. \n- There are benefits to be derived from doing this (cheaper housing, government incentives, easier recruitment, etc.), which have been costed. \n- Also, however, there will be greater costs of communication between departments. \n- These have also been costed for all possible locations of each department.\n- The company comprises several departmens. \n- There are several possible cities for relocation, or a department may be kept in London. \n- None of these cities (including London) may be the location for more than three of the departments.\n- Benefits for department \\var{k} from relocation at city \\var{l} is \\var{benefit_{k, l}} (in thousands of pounds).\n- Communication costs are of the form \\var{communication_{k, j}} * \\var{cost_{l, m}}.\n- \\var{communication_{k, j}} is the quantity of communication between department \\var{k} and city \\var{j}.\n- \\var{cost_{l, m}} is the unit cost of communication between city \\var{l} and city \\var{m}.\n\n\nINPUT FORMAT:\n\n{\n\t\"benefit\": [[benefit_{k, l} for l in 1,...,L] for k in 1,...,K],\n\t\"communication\": [[communication_{k, j} for j in 1,...,K] for k in 1,...,K],\n\t\"cost\": [[cost_{l, m} for m in 1,...,L] for l in 1,...,L],\n}\n\n\nOBJECTIVE: Where should each department be located so as to minimize overall yearly cost?\n\nOUTPUT INFO:\n\n- \\var{islocated_{k, l}} represents whether department \\var{k} is relocated at city \\var{l}\n\nOUTPUT FORMAT:\n\n{\n    \"islocated\": [[islocated_{k, l} for l in 1,...,L] for k in 1,...K],\n}", "data": {"benefit": [[10, 10], [15, 20], [10, 15], [20, 15], [5, 15]], "communication": [[0.0, 0.0, 1.0, 1.5, 0.0], [0.0, 0.0, 1.4, 1.2, 0.0], [1.0, 1.4, 0.0, 0.0, 2.0], [1.5, 1.2, 0.0, 2.0, 0.7], [0.0, 0.0, 2.0, 0.7, 0.0]], "cost": [[5, 14, 13], [15, 5, 9], [13, 9, 10]]}, "obj": 14900, "order": "30"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A quantity y is known to depend on another quantity x. A set of corresponding values has been collected for x and y and is presented.\n- The \\var{k}-th y value takes \\var{y_{k}} and the \\var{k}-th x value takes \\var{x_{k}}.\n\nINPUT FORMAT:\n\n{\n    \"y\": [y_{k} for k = 1,...,K],\n    \"x\": [x_{k} for k = 1,...,K]\n}\n\n\nOBJECTIVE: Fit the â€˜bestâ€™ straight line y = bx + a to this set of data points. The objective is to minimise the sum of absolute deviations of each observed value of y from the value predicted by the linear relationship.\n\nOUTPUT INFO:\n\n- \\var{intercept} represents the intercept of the fitted line\n- \\var{slope} represents the slope of the fitted line\n\nOUTPUT FORMAT:\n\n{\n    \"intercept\": intercept,\n    \"slope\": slope\n}", "data": {"K": 19, "Y": [1.0, 0.9, 0.7, 1.5, 2.0, 2.4, 3.2, 2.0, 2.7, 3.5, 1.0, 4.0, 3.6, 2.7, 5.7, 4.6, 6.0, 6.8, 7.3], "X": [0.0, 0.5, 1.0, 1.5, 1.9, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5, 6.0, 6.6, 7.0, 7.6, 8.5, 9.0, 10.0]}, "obj": 19.95, "order": "31"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A quantity y is known to depend on another quantity x. A set of corresponding values has been collected for x and y and is presented.\n- The \\var{k}-th y value takes \\var{y_{k}} and the \\var{k}-th x value takes \\var{x_{k}}.\n\nINPUT FORMAT:\n\n{\n    \"y\": [y_{k} for k = 1,...,K],\n    \"x\": [x_{k} for k = 1,...,K]\n}\n\n\nOBJECTIVE: Fit the â€˜bestâ€™ straight line y = bx + a where the objective is to minimize the maximum deviation of all the observed values of y from the value predicted by the linear relationship.\n\nOUTPUT INFO:\n\n- \\var{intercept} represents the intercept of the fitted line\n- \\var{slope} represents the slope of the fitted line\n\nOUTPUT FORMAT:\n\n{\n    \"intercept\": intercept,\n    \"slope\": slope\n}", "data": {"NumObs": 19, "Y": [1.0, 0.9, 0.7, 1.5, 2.0, 2.4, 3.2, 2.0, 2.7, 3.5, 1.0, 4.0, 3.6, 2.7, 5.7, 4.6, 6.0, 6.8, 7.3], "X": [0.0, 0.5, 1.0, 1.5, 1.9, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5, 6.0, 6.6, 7.0, 7.6, 8.5, 9.0, 10.0]}, "obj": 10.45, "order": "32"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A quantity y is known to depend on another quantity x. A set of corresponding values has been collected for x and y and is presented.\n- The \\var{k}-th y value takes \\var{y_{k}} and the \\var{k}-th x value takes \\var{x_{k}}.\n\nINPUT FORMAT:\n\n{\n    \"y\": [y_{k} for k = 1,...,K],\n    \"x\": [x_{k} for k = 1,...,K]\n}\n\n\nOBJECTIVE: Fit the â€˜bestâ€™ quadratic curve y = c * x^2 + b * x + a to this set of data points. The objective is to minimize the sum of absolute deviations of each observed value of y from the value predicted by the quadratic relationship.\n\nOUTPUT INFO:\n\n- \\var{quadratic} represents the coefficient of quadratic term\n- \\var{linear} represents the coefficient of linear term\n- \\var{constant} represents the coefficient of constant\n\nOUTPUT FORMAT:\n\n{\n    \"quadratic\": quadratic,\n    \"linear\": linear,\n    \"constant\": constant\n}", "data": {"y": [1.0, 0.9, 0.7, 1.5, 2.0, 2.4, 3.2, 2.0, 2.7, 3.5, 1.0, 4.0, 3.6, 2.7, 5.7, 4.6, 6.0, 6.8, 7.3], "x": [0.0, 0.5, 1.0, 1.5, 1.9, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5, 6.0, 6.6, 7.0, 7.6, 8.5, 9.0, 10.0]}, "obj": 1.475, "order": "33"}
{"description": "PROBLEM TYPE: MIP\nPROBLEM INFO:\n\n- A number of power stations are committed to meeting the following electricity load demands over a day.\n- Period \\var{t} of a day has demand \\var{demand_{t}}.\n- There are several types of generating unit available: the number of \\var{k}-th type units is \\var{num_{k}}.\n- Type \\var{k} generator has to work between a minimum level \\var{minlevel_{k}} and a maximum level \\var{maxlevel_{k}}. \n- There is an hourly cost of running each type \\var{k} generator at minimum level \\var{runcost_{k}}. \n- In addition, there is an extra hourly cost \\var{extracost_{k}} for each megawatt at which a type \\var{k} unit is operated above the minimum level. \n- Starting up a type \\var{k} generator also involves a cost \\var{startcost_{k}}.\n\n\nINPUT FORMAT:\n\n{\n    \"demand\": [demand_{t} for t in 1,...,T],\n    \"num\": [num_{k} for in 1,...,K],\n    \"minlevel\": [minlevel_{k} for in 1,...,K],\n    \"maxlevel\": [minlevel_{k} for in 1,...,K],\n    \"runcost\": [runcost_{k} for in 1,...,K],\n    \"extracost\": [extracost_{k} for in 1,...,K],\n    \"startcost\": [startcost_{k} for in 1,...,K]\n}\n\n\nOBJECTIVE: Which generators should be working in which periods of the day to minimize total cost?\n\nOUTPUT INFO:\n\n- \\var{numon} represents the number of generators of each type that are on in each period\n\nOUTPUT FORMAT:\n\n{\n    \"numon\": [[numon_{k, t} for t in 1,...,T] for k in 1,...,K]\n}", "data": {"demand": [15000, 30000, 25000, 40000, 27000], "num": [12, 10, 5], "minlevel": [850, 1250, 1500], "maxlevel": [2000, 1750, 4000], "runcost": [1000, 2600, 3000], "extracost": [2.0, 1.3, 3.0], "startcost": [2000, 1000, 500]}, "obj": 986630, "order": "34"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- We suppose that some products can be produced, each of them passing through several stages.\n- Necessary time to produce 1 unit of product \\var{k} is \\var{produce_time_{k, s}} hours for stage \\var{s}.\n- Availability in working hours is \\var{time_{s}} for stage \\var{s}. \n- The unitary profits for product \\var{k} is \\var{profit_{k}}.\n\nINPUT FORMAT:\n\n{\n\t\"produce_time\": [[produce_time_{k, s} for s in 1,...,S] for k in 1,...,K],\n\t\"available_time\": [time_{s} for s in 1,...,S],\n\t\"profit\": [profit_{k} for k in 1,...,K]\n}\n\n\nOBJECTIVE: Determine the quantities to be produced such that all the production constraints are satisfied and the profit is maximized.\n\nOUTPUT INFO:\n\n- \\var{quantity} represents the production quantity for each product\n\nOUTPUT FORMAT:\n\n{\n\t\"quantity\": [quantity_{k} for k in 1,...,K]\n}", "data": {"NumProducts": 2, "NumMachines": 2, "ProduceTime": [[1, 3], [2, 1]], "AvailableTime": [200, 100], "Profit": [20, 10]}, "obj": 1000.0, "order": "35"}
{"description": "PROBLEM TYPE: MIP\nPROBLEM INFO:\n\n- The knapsack problem has a significant place in the study of integer programming models with binary variables. \n- In the knapsack problem, one needs to pack a set of items in a container.\n- Each item \\var{k} has value \\var{value_{k}} and size \\var{size_{k}}.\n- And the container has maximum capacity \\var{C}. \n- If the total size of the items exceeds the capacity, we can't pack them all. \n- In that case, the problem is to choose a subset of the items of maximum total value that will fit in the container. \n\nINPUT FORMAT:\n\n{\n\t\"C\": C,\n\t\"value\": [value_{k} for k in 1,...,K],\n\t\"size\": [size_{k} for k in 1,...,K]\n}\n\n\nOBJECTIVE: Maximize the total value of the packed items\n\nOUTPUT INFO:\n\n- \\var{isincluded} represents whether each item is included in the container\n\nOUTPUT FORMAT:\n\n{\n\t\"isincluded\": [isincluded_{k} for k in 1,...,K]\n}", "data": {"C": 10, "value": [10, 20], "size": [8, 6]}, "obj": 20.0, "order": "36"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- We assume that there are available at the market different foods and that the food \\var{k} sells at a price \\var{price_{k}} per unit. \n- In addition there are several basic nutritional ingredients and, to achieve a balanced diet, each individual must receive at least \\var{demand_{m}} units of nutrient \\var{m} per day. \n- Finally, we assume that each unit of food \\var{k} contains \\var{nutri_{k, m}} units of nutrition \\var{m}\n\nINPUT FORMAT:\n\n{\n\t\"price\": [price_{k} for k in 1,...,K],\n\t\"demand\": [demand_{m} for m in 1,...,M],\n\t\"nutrition\": [[nutri_{k, m} for m in 1,...,M] for k in 1,...,K]\n}\n\n\nOBJECTIVE: We want to minimize the total prices of the foods to purchase.\n\nOUTPUT INFO:\n\n- \\var{quantity} represents the quantity of each food to purchase\n\nOUTPUT FORMAT:\n\n{\n\t\"quantity\": [quantity_{k} for k in 1,...,K]\n}", "data": {"price": [1, 2, 3], "demand": [10, 20], "nutrition": [[3, 5], [1, 3], [4, 4]]}, "obj": 4.0, "order": "37"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- Consider the problem of operating a warehouse, by buying and selling the stock of a certain commodity, in order to maximize profit over a certain length of time, say several periods.\n- The warehouse has a fixed capacity \\var{capacity}, and there is a cost \\var{holding_cost} per unit for holding stock for one period.\n- The selling price, \\var{price_{n}}$, of the commodity is known to fluctuate over a number of time periods. \n- In any period \\var{n} the price holding for purchase is \\var{cost_{n}}.\n- The warehouse is originally empty and is required to be empty at the end of the last period.\n\nINPUT FORMAT:\n\n{\n\t\"capacity\": capacity,\n\t\"holding_cost\": holding_cost,\n\t\"price\", [price_{n} for n in 1,...,N],\n\t\"cost\": [cost_{n} for n in 1,...,N]\n}\n\n\nOBJECTIVE: Determine the amount of buying and selling in each period to maximize the profit over the months\n\nOUTPUT INFO:\n\n- \\var{buyquantity} represents the amount of buying in each period\n- \\var{sellquantity} represents the amount of selling in each period\n- \\var{stock} represents the stock in each period, excluding the intial stock\n\nOUTPUT FORMAT:\n\n{\n\t\"buyquantity\": [buyquantity_{n} for n in 1,...,N],\n\t\"sellquantity\": [sellquantity_{n} for n in 1,...,N],\n\t\"stock\": [stock_{n} for n in 1,...,N]\n}", "data": {"capacity": 10, "holding_cost": 2, "price": [1, 2, 100], "cost": [100, 1, 100]}, "obj": 970.0, "order": "38"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A manufacturer wishes to produce \\var{alloy_quant} lb of an alloy that consists of several kinds of metals.\n- And by weight, the alloy we want contains a target quantity\\var{target_{m}} of metal \\var{metal_{m}}.\n- Several other kinds of alloys are available at various prices. \n- These alloys can be melted to get the alloy we want.\n- Alloy \\var{k} has \\var{ratio_{k, m}} ratio of \\var{metal_{m}} and is sold at price of \\var{price_k}.\n- Ratio \\var{ratio_{k, m}} ranges between 0 and 1.0 and should be properly treated in optimization\n\nINPUT FORMAT:\n\n{\n\t\"alloy_quant\": alloy_quant,\n\t\"target\": [target_{m} for m in 1,...,M],\n\t\"ratio\": [[ratio_{k, m} for m in 1,...,M] for k = 1,...,K],\n\t\"price\": [price_{k} for k in 1,...,K]\n}\n\nOBJECTIVE: The manufacturer wishes to find the amounts of the various alloys needed and to determine the cheapest combination.\n\nOUTPUT INFO:\n\n- \\var{amount} represents the quantity of each alloy we buy\n\nOUTPUT FORMAT:\n\n{\n\t\"amount\": [amount_{k} for k in 1,...,K]\n}", "data": {"alloy_quant": 1000, "target": [300, 700], "ratio": [[0.1, 0.9], [0.25, 0.75], [0.5, 0.5], [0.75, 0.25], [0.95, 0.05]], "price": [5, 4, 3, 2, 1.5]}, "obj": 3800.0, "order": "39"}
{"description": "PROBLEM TYPE: MILP\n\nPROBLEM INFO: \n- A hospital wants to make a weekly night shift (12pm-8am) schedule for its nurses. \n- The demand for nurses for the night shift on day \\var{j} = 1,...,7 is an integer \\var{d_j}. \n- Every nurse works \\var{period} days in a row on the night shift, followed by (7 - \\var{period}) days off.\n\n\nINPUT FORMAT: \n\n{\n    \"period\": period,\n    \"demand\": [d_j for j in 1, ...,7]\n}\n\nOBJECTIVE: The goal is to find the minimal number of nurses the hospital needs to hire. \n\nOUTPUT INFO: \n\n- for each day \\var{j} = 1,...,7, \\var{start_j} which shows the number of nurses that start their period on day \\var{j}.\n- the total number of nurses hired.\n\nOUTPUT FORMAT:\n\n{\n    \"start\": [start_j for j in 1, ...,7],\n    \"total\": total\n}\n\n", "data": {"T": 7, "Period": 4, "Demand": [0, 5, 9, 15, 4, 7, 3]}, "obj": 15, "order": "4"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A small firm specializes in making some types of spare automobile parts. \n- Each part is has to go through several shops \n- The required worker-hours for part \\var{k} in shop \\var{s} is \\var{time_{k, s}}.\n- The profit of part \\var{k} is \\var{profit_{k}}.\n- The capacity of shop \\var{s} is \\var{capacity_{s}} working hours.\n\nINPUT FORMAT:\n\n{\n\t\"time\": [[time_{k, s} for s in 1,...,S] for k in 1,...,K],\n\t\"profit\": [profit_{k} for k in 1,...,K],\n\t\"capacity\": [capacity_{s} for s in 1,...,S]\n}\n\n\nOBJECTIVE: Formulate the problem of determining the quantities of each spare part to be made during the month so as to maximize profit.\n\nOUTPUT INFO:\n\n- \\var{quantity} represents the amount of each spare part to be made\n\nOUTPUT FORMAT:\n\n{\n\t\"quantity\": [quantity_{k} for k in 1,...,K]\n}", "data": {"time": [[2, 3], [1, 2], [3, 2], [3, 1], [1, 1]], "profit": [30, 20, 40, 25, 10], "capacity": [700, 1000]}, "obj": 12000.0, "order": "40"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A small computer manufacturing company forecasts the demand over the next \\var{n}-th month to be \\var{demand_{n}}.\n- These demands must be satisfied and can not be shorted.\n- In any month it can produce at most \\var{max_regular_amount} units, using regular production, at a cost of \\var{cost_regular} dollars per unit. \n- By using overtime, it can produce additional units at \\var{cost_overtime} dollars per unit. \n- The firm can store units from month to month at a cost of \\var{store_cost} dollars per unit per month. \n\nINPUT FORMAT:\n\n{\n\t\"demand\": [demand_{n} for n in 1,...,N],\n\t\"max_regular_amount\": max_regular_amount,\n\t\"cost_regular\": cost_regular,\n\t\"cost_overtime\": cost_overtime,\n\t\"store_cost\": store_cost\n}\n\n\nOBJECTIVE: Formulate the problem of determining the production schedule that minimizes the cost.\n\nOUTPUT INFO:\n\n- \\var{reg_quant} represents the quantity of products produced using regular production in each future month\n- \\var{over_quant} represents the quantity of products produced using overtime production in each future month\n\nOUTPUT FORMAT:\n\n{\n\t\"reg_quant\": [reg_quant_{n} for n in 1,...,N]\n\t\"over_quant\": [over_quant_{n} for n in 1,...,N]\n}", "data": {"demand": [10.0, 20.0, 10.0], "max_regular_amount": 5.0, "cost_regular": 10.0, "cost_overtime": 12.0, "store_cost": 1.0}, "obj": 450.0, "order": "41"}
{"description": "PROBLEM TYPE: LP or MILP\nPROBLEM INFO:\n\n- To operate a cafeteria, the manager must ensure on-call duty based on the statistics on the required staff. \n- In the future days, the number of desired employees on day \\var{n} is denoted with \\var{num_{n}}.\n- Each employee works \\var{n_working_days} days in a row and then has \\var{n_resting_days} days off.\n\nINPUT FORMAT:\n\n{\n\t\"num\": [num_{n} for n in 1,...,N],\n\t\"n_working_days\": n_working_days,\n\t\"n_resting_days\": n_resting_days\n}\n\n\nOBJECTIVE: Calculate the minimum number of employees to hire\n\nOUTPUT INFO:\n\n- \\var{total_number} represents the total number of employees to employ\n- \\var{is_work} represents whether employee is working a rest on each day. Its length is determined by \\var{total_number}\n\nOUTPUT FORMAT:\n\n{\n\t\"total_number\": total_number,\n\t\"is_work\": [[is_work_{n, i} for n in 1,...,N] for i in 1,...,total_number]\n}", "data": {"num": [5, 10, 2, 3, 2, 10], "n_working_days": 5, "n_resting_days": 2}, "obj": 15, "order": "42"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A foundry receives a specific order for \\var{n_steel_quant} tons of steel. \n- This steel must meet the following characteristics: it must contain at least \\var{mn_percent} percentage of manganese (Mn) while its percentage of silicon (SI) must be between \\var{si_min} and \\var{si_max}.\n- To cast this steel, the foundry has limited quantities of several types of minerals.\n- The contents expressed in percentage per mineral \\var{k} are \\var{contsi_{k}} for Si and \\var{contmn_{k}} for Mn.\n- The process for producing steel is such that direct addition of Mn is possible.\n- This Manganese is available at a price of \\var{mang_price} million euros per ton. \n- As for the minerals, it costs \\var{cost_{k}} million euros per thousand tons for mineral \\var{k}.\n- The foundry plans to sell the steel produced at \\var{sell_price} million euros per ton.\n- The cost of smelting a ton of mineral is \\var{melt_price} million euros.\n\nINPUT FORMAT:\n\n{\n\t\"n_steel_quant\": n_steel_quant,\n\t\"mn_percent\": mn_percent,\n\t\"si_min\": si_min,\n\t\"si_max\": si_max,\n\t\"contsi\": [contsi_{k} for k in 1,...,K]\n\t\"contmn\": [contmn_{k} for k in 1,...,K]\n\t\"mang_price\": mang_price,\n\t\"cost\": [cost_{k} for k in 1,...,K]\n\t\"sell_price\": sell_price,\n\t\"melt_price\": melt_price\n}\n\nOBJECTIVE: How should the manufacture manage the steel to maximize profit?\n\nOUTPUT INFO:\n\n- \\var{amount} represents the amount of each mineral melted\n- \\var{num_mang} represents the amount of Manganese directly added\n\nOUTPUT FORMAT:\n\n{\n\t\"amount\": [amount_{k} for k in 1,...,K]\n\t\"num_mang\": [num_mang]\n}", "data": {"n_steel_quant": 1000, "mn_percent": 0.45, "si_min": 3.25, "si_max": 5.0, "contsi": [4.0, 1.0, 0.6], "contmn": [0.45, 0.5, 0.4], "mang_price": 8.0, "cost": [21, 25, 15], "sell_price": 0.45, "melt_price": 0.005}, "obj": 431433437.5, "order": "43"}
{"description": "PROBLEM TYPE: MILP\nPROBLEM INFO:\n\n- Before going on vacation you want to make floppy disk backups of important files. \n- You have at your disposal several blank floppy disks with capacities of \\var{capacity} GB. \n- They are given the size of the files that you want to save.\n- Each file \\var{j} has size \\var{size_{j}}.\n- Assuming that you do not have any programs to compress the data and that you have enough floppy disks available for back up everything.\n\nINPUT FORMAT:\n\n{\n\t\"capacity\": capacity,\n\t\"size\": [size_{j} for j in 1,...,N]\n}\n\nOBJECTIVE: How to distribute these files on the floppy disks in order to minimize the number of floppy disks used.\n\nOUTPUT INFO:\n\n- \\var{n_disks} represents the total number of floppy disks used\n- \\var{whichdisk} represents on which disk each file is distributed. Its length is determined by \\var{n_disks}\n\nOUTPUT FORMAT:\n\n{\n\t\"n_disks\": n_disks,\n\t\"whichdisk\": [disk_{j} for j in 1,...,N]\n}", "data": {"capacity": 3, "size": [1, 2, 0.5, 1.5, 2.5]}, "obj": 3, "order": "44"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- An Italian transport company must send empty containers from its depots to ports. \n- The number of containers available in the depot \\var{i} is denoted with \\var{numdepot_i}. \n- Container requirement in port \\var{j} is \\var{numport_{j}}. \n- Transport of containers is by barges. \n- Each barge can only contain two containers and the cost of transport (per barge) is proportional to the distance traveled (price is \\var{price} Euros/km).\n- The distances between depot \\var{i} and port \\var{j} is \\var{distance_{i, j}}.\n\nINPUT FORMAT:\n\n{\n\t\"numdepot\": [numdepot_{i} for i in 1,...,I],\n\t\"numport\": [numport_{j} for j in 1,...,J],\n\t\"price\": price,\n\t\"distance\": [[distance_{i, j} for i in 1,...I] for j in 1,...,J]\n}\n\n\nOBJECTIVE: Minimize the total transportation cost.\n\nOUTPUT INFO:\n\n\\var{number} represents the number of containers sent from each depot to port\n\nOUTPUT FORMAT:\n\n{\n\t\"number\": [[number_{i, j} for i in 1,...,I] for j in 1,...,J]\n}", "data": {"numdepot": [3, 3, 4], "numport": [1, 6, 3], "price": 3.0, "distance": [[0.0, 2.0, 5.0], [2.0, 0.0, 3.0], [5.0, 3.0, 0.0]]}, "obj": 9.0, "order": "45"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- Wild Sports produces \\var{M} different products using \\var{N} different raw materials.\n- The company has \\var{available_{i}} of raw material \\var{i} available.\n- Product \\var{j} requires \\var{req_{i,j}} units of material \\var{i} per unit produced.\n- Product \\var{j} has a selling price of \\var{price_j} per unit.\n- Product \\var{j} has a production cost of \\var{cost_j} per unit produced.\n- Product \\var{j} has a forecasted maximum demand of \\var{demand_j} for the month.\n\nINPUT FORMAT: \n\n{\n    \"available\": [available_{i} for i in 1, ..., N],\n    \"requirements\": [[req_{i,j} for i in 1, ..., N] for j in 1, ..., M],\n    \"prices\": [price_{j} for j in 1, ..., M],\n    \"costs\": [cost_{j} for j in 1, ..., M],\n    \"demands\": [demand_{j} for j in 1, ..., M]\n}\n\nOBJECTIVE: How many of each product should the sports produce in order to maximize its profit for the month?\n\nOUTPUT INFO:\n\n- the amount of each product produced \\var{amount_{j}}.\n- \\var{total_profit} shows the total profit of the company for the month.\n\nOUTPUT FORMAT:\n\n{\n    \"amount\": [amount_{j} for j in 1, ..., M],\n    \"total_profit\": total_profit\n}\n", "data": {"available": [240000, 8000, 75000], "requirements": [[48, 1, 10], [40, 1, 10], [0, 1, 2]], "prices": [40, 38, 9], "costs": [30, 26, 7], "demands": [10000, 2000, 10000]}, "obj": 62666.6666667, "order": "46"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A division of an auto parts manufacturer produces \\var{P} different parts using \\var{M} different machines.\n- Batch of 100 part \\var{p} requires \\var{time_{m,p}} hours on machine \\var{m}.\n- The division incurs a charge of \\var{cost_{m}} per hour for using machine \\var{m}.\n- Machine \\var{m} has an availability of up to \\var{available_{m}} hours per month.\n- The division sells part \\var{p} in batches of 100 at price of \\var{price_{p}} per batch.\n- The division must produce at least \\var{min_batches_{p}} batches of part \\var{p} each month to fulfill a contract.\n\nINPUT FORMAT: \n\n{\n    \"time_required\": [[time_{m,p} for p in 1, ..., P] for m in 1, ..., M],\n    \"machine_costs\": [cost_{m} for m in 1, ..., M],\n    \"availability\": [available_{m} for m in 1, ..., M],\n    \"prices\": [price_{p} for p in 1, ..., P],\n    \"min_batches\": [min_batches_{p} for p in 1, ..., P]\n}\n\nOBJECTIVE: How many batches of each part should the manufacturer produce each month to maximize profit?\n\nOUTPUT INFO:\n\n- the number of batches of each part produced \\var{batches_{p}}.\n- \\var{total_profit} represents the total profit obtained for the month.\n\nOUTPUT FORMAT:\n\n{\n    \"batches\": [batches_{p} for p in 1, ..., P],\n    \"total_profit\": total_profit\n}", "data": {"time_required": [[2, 1, 3, 2], [4, 2, 1, 2], [6, 2, 1, 2]], "machine_costs": [160, 10, 15], "availability": [200, 300, 500], "prices": [570, 250, 585, 430], "min_batches": [10, 10, 10, 10]}, "obj": 9600, "order": "47"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- Custom Tees is planning an online advertising campaign with \\var{A} different ad types across two web companies.\n- The company has set a goal of \\var{goal_young} thousand clicks from visitors aged 18-25 and \\var{goal_old} thousand clicks from visitors older than 25.\n- The company has set a goal of \\var{goal_unique_young} thousand unique clicks from visitors aged 18-25 and \\var{goal_unique_old} thousand unique clicks from visitors older than 25.\n- Ad type \\var{a} has an estimated percentage of \\var{young_click_{a}} clicks from the 18-25 age range.\n- Ad type \\var{a} has an estimated percentage of \\var{old_click_{a}} clicks from older visitors.\n- Ad type \\var{a} has a cost of \\var{cost_{a}} per 1000 clicks.\n- Ad type \\var{a} has a maximum allowable clicks of \\var{max_click_{a}} in thousands.\n- The estimated percentage of unique visitors for each ad type \\var{a} is \\var{unique_click_{a}}.\n\nINPUT FORMAT: \n\n{\n    \"goal_young\": goal_young,\n    \"goal_old\": goal_old,\n    \"goal_unique_young\": goal_unique_young,\n    \"goal_unique_old\": goal_unique_old,\n    \"young_clicks\": [young_click_{a} for a in 1,...,A],\n    \"old_clicks\": [old_click_{a} for a in 1,...,A],\n    \"costs\": [cost_{a} for a in 1,...,A],\n    \"max_clicks\": [max_click_{a} for a in 1,...,A],\n    \"unique_clicks\": [unique_click_{a} for a in 1,...,A]\n}\n\nOBJECTIVE: How many clicks from each ad type should Custom Tees purchase to minimize cost?\n\nOUTPUT INFO:\n\n- the number of clicks purchased for each ad type is \\var{clicks_{a}} in thousands.\n- \\var{total_cost} represents the total cost of the ad campaign.\n\nOUTPUT FORMAT:\n\n{\n    \"clicks\": [click_{a} for a in 1, ..., A],\n    \"total_cost\": total_cost\n}", "data": {"goal_young": 500, "goal_old": 600, "goal_unique_young": 250, "goal_unique_old": 300, "young_clicks": [40, 30, 70], "old_clicks": [60, 70, 30], "costs": [75, 100, 120], "max_clicks": [600, 300, 300], "unique_clicks": [40, 75, 90]}, "obj": 100500, "order": "48"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A company produces \\var{S} different types of steel using \\var{A} different alloys.\n- The company has \\var{available_{a}} tons of alloy \\var{a} available.\n- Steel \\var{s} requires a certain percentage of carbon \\var{carbon_min_{s}}.\n- Steel \\var{s} has a maximum allowable percentage for nickel \\var{nickel_max_{s}}.\n- Alloy \\var{a} contains \\var{carbon_{a}} percent of carbon and \\var{nickel_{a}} percent of nickel.\n- Alloy \\var{a} has a purchase price of \\var{alloy_price_{a}} per ton.\n- Steel \\var{s} has a selling price of \\var{steel_price_{s}} per ton.\n- All steel must have at most 40% of alloy 1.\n\nINPUT FORMAT: \n\n{\n\"available\": [available_{a} for a in 1, ..., A],\n\"carbon\": [carbon_{a} for a in 1, ..., A],\n\"nickel\": [nickel_{a} for a in 1, ..., A],\n\"alloy_prices\": [alloy_price_{a} for a in 1, ..., A],\n\"steel_prices\": [steel_price_{s} for s in 1, ..., S],\n\"carbon_min\": [carbon_min_{s} for s in 1, ..., S],\n\"nickel_max\": [nickel_min_{s} for s in 1, ..., S]\n}\n\nOBJECTIVE: How much of each alloy should the company use in each type of steel, and how much of each steel type should be produced to maximize profit?\n\nOUTPUT INFO:\n\n- The amount of each alloy used in each type of steel \\var{alloy_amount_{a,s}}.\n- \\var{total_steel_{s}} shows the total amount of steel type \\var{s} produced.\n- \\var{total_profit} represents the total profit.\n\nOUTPUT FORMAT:\n\n{\n    \"alloy_use\": [[alloy_amount_{a,s} for a in 1, ..., A] for s in 1, ..., S],\n    \"total_steel\": [total_steel_{s} for s in 1, ..., S],\n    \"total_profit\": total_profit\n}", "data": {"available": [40, 50, 80], "carbon": [3, 4, 3.5], "nickel": [1, 1.5, 1.8], "alloy_prices": [380, 400, 440], "steel_prices": [650, 600], "carbon_min": [3.6, 3.4], "nickel_max": [1.5, 1.7]}, "obj": 37100, "order": "49"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- Consider a communication network consisting of \\var{n} nodes.\n- Nodes are conÂ­nected by communication links.\n- A link allowing one-way transmission from node \\var{i} to node \\var{j} is described by an ordered pair (\\var{i},\\var{j}). \n- Let \\var{A} be the set of all links. \n- We assume that each link (\\var{i},\\var{j}) \\in \\var{A} can carry up to \\var{U_{i,j}} bits per second. \n- There is a positive cost \\var{C_{i,j}} per bit transmitted along that link. \n- Each node \\var{k} generates data, at the rate of \\var{B_{k,l}} bits per second, that have to be transmitted to node \\var{l}, either through a direct link (\\var{k}, \\var{l}) or by tracing a sequence of links. \n- We allow the data with the same origin and destination to be split and be transmitted along different paths.\n\nINPUT FORMAT:\n\n{\n    \"links\": [\n       {\n        \"start\": i,\n        \"end\": j,\n        \"U\": U_{i,j},\n        \"C\": C_{i,j},\n       }\n    ],\n    \"data\": [\n        {\n            \"source\": k,\n            \"destination\": l,\n            \"rate\": B_{k,l}\n        }\n    ]\n}\n\n\nOBJECTIVE: Find paths along which all data reach their intended destinations, while minimizing the total cost. \n\n\n\nOUTPUT INFO:\n- \\var{total_cost} represents the total cost of all the paths\n- \\var{path_cost} represents the cost of the corresponding path\n- \\var{path_flow} represents the flow going through the corresponding path\n\nOUTPUT FORMAT:\n\n{\n    \"optimized_paths\": {\n        \"paths\": [\n            {\n                \"source\": k,\n                \"destination\": l,\n                \"route\": [k, i_1, i_2, ..., l],\n                \"path_flow\": path_flow\n                \"path_cost\": path_cost\n            },\n            for id in 1, ..., m \n        ],\n    \"total_cost\": \"total_cost\"\n}", "data": {"NumLinks": 4, "StartNode": [1, 2, 2, 3], "EndNode": [2, 3, 4, 4], "Capacity": [50, 40, 60, 50], "Cost": [2, 3, 1, 1], "NumFlowReqs": 2, "Source": [1, 2], "Destination": [4, 3], "DataRate": [40, 30]}, "obj": 190, "order": "5"}
{"description": "PROBLEM TYPE: LP or MILP\n\nPROBLEM INFO:\n\n- The town has \\var{S} different shifts for the police officers during the day.\n- During each shift \\var{s}, the town requires \\var{officers_needed_{s}} police officers on duty.\n- Each police officer works for two consecutive shifts.\n- The cost for the town when starting a shift at \\var{s} is \\var{shift_cost_{s}}.\n\nINPUT FORMAT: \n\n{\n    \"officers_needed\": [officers_needed_{s} for s in 1, ..., S],\n    \"shift_costs\": [shift_cost_{s} for s in 1, ..., S]\n}\n\nOBJECTIVE: How many officers should the town assign to each shift in order to minimize the total cost?\n\nOUTPUT INFO:\n\n- The number of officers assigned to each shift \\var{officers_assigned_{s}}.\n- \\var{total_cost} indicates the total cost for the town.\n\nOUTPUT FORMAT:\n\n{\n    \"officers_assigned\": [officers_assigned_{s} for s in 1, ..., S],\n    \"total_cost\": total_cost\n}", "data": {"NumShifts": 6, "OfficersNeeded": [15, 13, 11, 11, 9, 7], "ShiftCosts": [500, 480, 450, 460, 470, 490]}, "obj": 16620, "order": "50"}
{"description": "PROBLEM TYPE: LP or MILP\n\nPROBLEM INFO:\n\n- A fine foods company produces gift baskets for a season that lasts \\var{W} weeks.\n- The demand for week \\var{w} is \\var{demand_{w}} and the demand must be met.\n- Regular labor is available for \\var{regular_labor_{w}} hours per week and costs $\\var{regular_cost}/h.\n- Overtime labor is available for \\var{overtime_labor_{w}} hours per week and costs $\\var{overtime_cost}/h.\n- Each basket takes \\var{assembly_time} hours of labor to assemble.\n- The material cost for each basket is $\\var{material_cost} and it sells for $\\var{selling_price}.\n- Unsold baskets from a week incur a $\\var{holding_cost} holding cost. \n- No baskets are available at the start of week 1.\n- Unsold baskets at the end of week \\var{W} have a salvage value of $var{salvage_value} and do not incur a holding cost.\n\nINPUT FORMAT: \n\n{\n    \"regular_cost\": regular_cost,\n    \"overtime_cost\": overtime_cost,\n    \"assembly_time\": assembly_time,\n    \"material_cost\": material_cost,\n    \"selling_price\": selling_price,\n    \"holding_cost\": holding_cost,\n    \"salvage_value\": salvage_value,\n    \"demand\": [demand_{w} for w in 1, ..., W],\n    \"regular_labor\": [regular_labor_{w} for w in 1, ..., W],\n    \"overtime_labor\": [overtime_labor_{w} for w in 1, ..., W]\n}\n\nOBJECTIVE: How much regular and overtime labor should be utilized each week to assemble the baskets to maximize the profit over the season?\n\nOUTPUT INFO:\n\n- the hours of regular labor used each week \\var{regular_used_{w}}.\n- the hours of overtime labor used each week \\var{overtime_used_{w}}.\n- the number of baskets assembled with regular labor \\var{regular_basket_{w}}.\n- the number of baskets assembled with overtime labor \\var{overtime_basket_{w}}.\n- the number of baskets on hand at the end of week \\var{inventory_{w}}.\n- \\var{total_profit} shows the total profit of the company for the season.\n\nOUTPUT FORMAT:\n\n{\n    \"regular_used\": [regular_used_{w} for w in 1, ..., W],\n    \"overtime_used\": [overtime_used_{w} for w in 1, ..., W],\n    \"regular_baskets\": [regular_basket_{w} for w in 1, ..., W],\n    \"overtime_baskets\": [overtime_basket_{w} for w in 1, ..., W],\n    \"inventory\": [inventory_{w} for w in 1, ..., W],\n    \"total_profit\": total_profit\n}", "data": {"regular_cost": 30, "overtime_cost": 45, "assembly_time": 0.4, "material_cost": 25, "selling_price": 65, "holding_cost": 4, "salvage_value": 30, "demand": [700, 1500, 2800, 1800], "regular_labor": [450, 550, 600, 600], "overtime_labor": [40, 200, 320, 160]}, "obj": 178900, "order": "51"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A division of an auto parts manufacturer produces \\var{P} different parts using \\var{M} different machines.\n- Batch of 100 part \\var{p} requires \\var{time_{m,p}} hours on machine \\var{m}.\n- The division incurs a charge of \\var{cost_{m}} per hour for using machine \\var{m}.\n- Machine \\var{m} has an availability of up to \\var{available_{m}} hours per month.\n- Machine \\var{M} and Machine \\var{M-1} can share availability.\n- Individual availability conditions for Machine \\var{M} and Machine \\var{M-1} can be disregarded.\n- The division sells part \\var{p} in batches of 100 at price of \\var{price_{p}} per batch.\n- The division must produce at least \\var{min_batches_{p}} batches of part \\var{p} each month to fulfill a contract.\n\nINPUT FORMAT: \n\n{\n    \"time_required\": [[time_{m,p} for p in 1, ..., P] for m in 1, ..., M],\n    \"machine_costs\": [cost_{m} for m in 1, ..., M],\n    \"availability\": [available_{m} for m in 1, ..., M],\n    \"prices\": [price_{p} for p in 1, ..., P],\n    \"min_batches\": [min_batches_{p} for p in 1, ..., P]\n}\n\nOBJECTIVE: How many batches of each part should the manufacturer produce each month to maximize profit?\n\nOUTPUT INFO:\n\n- the number of batches of each part produced \\var{batches_{p}}.\n- \\var{total_profit} represents the total profit obtained for the month.\n\nOUTPUT FORMAT:\n\n{\n    \"batches\": [batches_{p} for p in 1, ..., P],\n    \"total_profit\": total_profit\n}", "data": {"time_required": [[2, 1, 3, 2], [4, 2, 1, 2], [6, 2, 1, 2]], "machine_costs": [160, 10, 15], "availability": [200, 300, 500], "prices": [570, 250, 585, 430], "min_batches": [10, 10, 10, 10]}, "obj": 10200, "order": "52"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A division of an auto parts manufacturer produces \\var{P} different parts using \\var{M} different machines.\n- Batch of 100 part \\var{p} requires \\var{time_{m,p}} hours on machine \\var{m}.\n- The division incurs a charge of \\var{cost_{m}} per hour for using machine \\var{m}.\n- Machine \\var{m} has an availability of up to \\var{available_{m}} hours per month.\n- The division sells part \\var{p} in batches of 100 at price of \\var{price_{p}} per batch.\n- The division must produce at least \\var{min_batches_{p}} batches of part \\var{p} each month to fulfill a contract.\n- Extra available time for machine \\var{m} can be acquired at $\\var{extra_costs_{m}}/hour. \n- Up to \\var{max_extra_{m}} hours can be purchased for each machine \\var{m}.\n\nINPUT FORMAT: \n\n{\n    \"time_required\": [[time_{m,p} for p in 1, ..., P] for m in 1, ..., M],\n    \"machine_costs\": [cost_{m} for m in 1, ..., M],\n    \"availability\": [available_{m} for m in 1, ..., M],\n    \"prices\": [price_{p} for p in 1, ..., P],\n    \"min_batches\": [min_batches_{p} for p in 1, ..., P],\n    \"extra_costs\": [extra_cost_{m} for m in 1, ..., M],\n    \"max_extra\": [max_extra_{m} for m in 1, ..., M]\n}\n\nOBJECTIVE: How many batches of each part should the manufacturer produce each month to maximize profit?\n\nOUTPUT INFO:\n\n- the number of batches of each part produced \\var{batches_{p}}.\n- \\var{extra_time} denotes the additional hours purchased for each machine \\var{m}.\n- \\var{total_profit} represents the total profit obtained for the month.\n\nOUTPUT FORMAT:\n\n{\n    \"batches\": [batches_{p} for p in 1, ..., P],\n    \"extra_time\": [extra_time_{p} for p in 1, ..., P],\n    \"total_profit\": total_profit\n}", "data": {"time_required": [[2, 1, 3, 2], [4, 2, 1, 2], [6, 2, 1, 2]], "machine_costs": [160, 10, 15], "availability": [200, 300, 500], "prices": [570, 250, 585, 430], "min_batches": [10, 10, 10, 10], "extra_costs": [0, 15, 22.5], "max_extra": [0, 80, 80]}, "obj": 9750, "order": "53"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- Custom Tees is planning an online advertising campaign with \\var{A} different ad types across two web companies.\n- The company has set a goal of \\var{goal_young} thousand clicks from visitors aged 18-25 and \\var{goal_old} thousand clicks from visitors older than 25.\n- The company has set a goal of \\var{goal_unique_young} thousand unique clicks from visitors aged 18-25 and \\var{goal_unique_old} thousand unique clicks from visitors older than 25.\n- Ad type \\var{a} has an estimated percentage of \\var{young_click_{a}} clicks from the 18-25 age range.\n- Ad type \\var{a} has an estimated percentage of \\var{old_click_{a}} clicks from older visitors.\n- Ad type \\var{a} has a cost of \\var{cost_{a}} per 1000 clicks.\n- Ad type \\var{a} has a maximum allowable clicks of \\var{max_click_{a}} in thousands.\n- The estimated percentage of unique visitors for each ad type \\var{a} is \\var{unique_click_{a}}.\n- The company has an advertising budget of $\\var{budget}\n\nINPUT FORMAT: \n\n{\n    \"goal_young\": goal_young,\n    \"goal_old\": goal_old,\n    \"goal_unique_young\": goal_unique_young,\n    \"goal_unique_old\": goal_unique_old,\n    \"young_clicks\": [young_click_{a} for a in 1,...,A],\n    \"old_clicks\": [old_click_{a} for a in 1,...,A],\n    \"costs\": [cost_{a} for a in 1,...,A],\n    \"max_clicks\": [max_click_{a} for a in 1,...,A],\n    \"unique_clicks\": [unique_click_{a} for a in 1,...,A],\n    \"budget\": budget\n}\n\nOBJECTIVE: How many clicks from each ad type should Custom Tees purchase to maximize the number of unique clicks within the budget?\n\nOUTPUT INFO:\n\n- the number of clicks purchased for each ad type is \\var{clicks_{a}} in thousands.\n- \\var{total_unique_clicks} represents the total number of unique clicks.\n\nOUTPUT FORMAT:\n\n{\n    \"clicks\": [click_{a} for a in 1, ..., A],\n    \"total_unique_clicks\": total_unique_clicks\n}", "data": {"goal_young": 500, "goal_old": 600, "goal_unique_young": 250, "goal_unique_old": 300, "young_clicks": [40, 30, 70], "old_clicks": [60, 70, 30], "costs": [75, 100, 120], "max_clicks": [600, 300, 300], "unique_clicks": [40, 75, 90], "budget": 105000}, "obj": 703, "order": "54"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A small electric utility operates \\var{P} power plants to supply electricity to \\var{C} cities.\n- Each power plant has a capacity of \\var{supply_{p}} million kwh.\n- Each city has a peak demand of \\var{demand_{c}} million kwh, which must be met at the same time.\n- Power plant \\var{p} can send electricity to city \\var{c} at a transmission cost of \\var{transmission_{p,c}} $/million kwh.\n\nINPUT FORMAT: \n\n{\n    \"supply\": [supply_{p} for p in 1, ..., P],\n    \"demand\": [demand_{c} for c in 1, ..., C],\n    \"transmission_costs\": [[transmission_{p,c} for c in 1, ..., C] for p in 1, ..., P]\n}\n\nOBJECTIVE: How much electricity should each power plant send to each city to minimize the total transmission cost?\n\nOUTPUT INFO:\n\n- the amount of electricity power plant \\var{p} sends to city \\var{c} as \\var{send_{p,c}} million kwh.\n- \\var{total_cost} displays the total transmission cost for the utility.\n\nOUTPUT FORMAT:\n\n{\n    \"send\": [[send_{p,c} for c in 1, ..., C] for p in 1, ..., P],\n    \"total_cost\": total_cost\n}\n", "data": {"supply": [30, 25, 45], "demand": [40, 60], "transmission_costs": [[14, 22], [18, 12], [10, 16]]}, "obj": 1380, "order": "55"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- US soybean suppliers ship soybeans to different destinations using various routes.\n- Consider a transportation network consisting of \\var{n} cities.\n- Soybeans are sent from a terminal city \\var{k} to a port city \\var{p}.\n- Subsequently, Soybeans are transported from a port city \\var{p} to a destination city \\var{l}\n- Let \\var{A} be the set of all routes. \n- There is a positive transport cost \\var{C_{i,j}} per metric ton along that route.\n- Each source terminal \\var{k} has a soybean supply of \\var{supply_{k}}. \n- Each destination \\var{l} has a demand for soybeans of \\var{demand_{l}}.\n\nINPUT FORMAT: \n\n{\n    \"routes\": [\n       {\n        \"start\": i,\n        \"end\": j,\n        \"C\": C_{i,j},\n       }\n    ],\n    \"demand\": [\n        {\n            \"destination\": l,\n            \"D\": demand_{l}\n        }\n    ],\n    \"supply\": [\n        {\n            \"terminal\": k,\n            \"S\": supply_{k}\n        }\n    ]\n}\n\nOBJECTIVE: What quantity of soybeans should they from source to destination to minimize transportation costs?\n\nOUTPUT INFO:\n\n- the amount of soybeans shipped from \\var{i} to \\var{j} is \\var{amount_{i,j}}.\n- \\var{total_cost} represents the total transportation cost.\n\nOUTPUT FORMAT:\n\n{\n    \"distribution\": [\n        {\"from\": i,\n         \"to\": j,\n         \"amount\": amount_{i,j}\n        }\n        for id in 1, ..., m\n    ],\n    \"total_cost\": total_cost\n}\n\n", "data": {"NumTerminals": 3, "NumDestinations": 4, "Cost": [[34, 49, 17, 26], [52, 64, 23, 14], [20, 28, 12, 17]], "Demand": [65, 70, 50, 45], "Supply": [150, 100, 100]}, "obj": 33960, "order": "56"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A division of an auto parts manufacturer produces \\var{P} different parts using \\var{M} different machines.\n- Batch of 100 part \\var{p} requires \\var{time_{m,p}} hours on machine \\var{m}.\n- The division incurs a charge of \\var{cost_{m}} per hour for using machine \\var{m}.\n- Machine \\var{m} has an availability of up to \\var{available_{m}} hours per month.\n- The division sells part \\var{p} in batches of 100 at price of \\var{price_{p}} per batch.\n- The division must produce at least \\var{min_batches_{p}} batches of part \\var{p} each month to fulfill a contract.\n- Machine \\var{1} is being outsourced so that the manufacturer must pay for the labor.\n- The labor costs $\\var{standard_cost}/h up to \\var{overtime_hour} hours, after which it costs $\\var{overtime_cost}/h due to overtime.\n- Individual availability conditions for Machine \\var{1} can be disregarded.\n\nINPUT FORMAT: \n\n{\n    \"time_required\": [[time_{m,p} for p in 1, ..., P] for m in 1, ..., M],\n    \"machine_costs\": [cost_{m} for m in 1, ..., M],\n    \"availability\": [available_{m} for m in 1, ..., M],\n    \"prices\": [price_{p} for p in 1, ..., P],\n    \"min_batches\": [min_batches_{p} for p in 1, ..., P],\n    \"standard_cost\": standard_cost,\n    \"overtime_cost\": overtime_cost,\n    \"overtime_hour\": overtime_hour\n}\n\nOBJECTIVE: How many batches of each part should the manufacturer produce each month to maximize profit?\n\nOUTPUT INFO:\n\n- the number of batches of each part produced \\var{batches_{p}}.\n- \\var{total_profit} represents the total profit obtained for the month.\n\nOUTPUT FORMAT:\n\n{\n    \"batches\": [batches_{p} for p in 1, ..., P],\n    \"total_profit\": total_profit\n}", "data": {"NumMachines": 3, "NumParts": 4, "TimeRequired": [[2, 1, 3, 2], [4, 2, 1, 2], [6, 2, 1, 2]], "MachineCosts": [160, 10, 15], "Availability": [200, 300, 500], "Prices": [570, 250, 585, 430], "MinBatches": [10, 10, 10, 10], "StandardCost": 20, "OvertimeCost": 30, "OvertimeHour": [400, 400, 300]}, "obj": 5600, "order": "57"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A division of an auto parts manufacturer produces \\var{P} different parts using \\var{M} different machines.\n- Batch of 100 part \\var{p} requires \\var{time_{m,p}} hours on machine \\var{m}.\n- The division incurs a charge of \\var{cost_{m}} per hour for using machine \\var{m}.\n- Machine \\var{m} has an availability of up to \\var{available_{m}} hours per month.\n- The division sells part \\var{p} in batches of 100 at price of \\var{price_{p}} per batch.\n- The division must produce at least \\var{min_batches_{p}} batches of part \\var{p} each month to fulfill a contract.\n- Machine \\var{1} is being outsourced so that the manufacturer must pay for the labor.\n- The labor costs $\\var{standard_cost}/h up to \\var{overtime_hour} hours, after which it costs $\\var{overtime_cost}/h due to overtime.\n- Individual availability conditions for Machine \\var{1} can be disregarded.\n- The desired profit should surpass \\var{min_profit}.\n\nINPUT FORMAT: \n\n{\n    \"time_required\": [[time_{m,p} for p in 1, ..., P] for m in 1, ..., M],\n    \"machine_costs\": [cost_{m} for m in 1, ..., M],\n    \"availability\": [available_{m} for m in 1, ..., M],\n    \"prices\": [price_{p} for p in 1, ..., P],\n    \"min_batches\": [min_batches_{p} for p in 1, ..., P],\n    \"standard_cost\": standard_cost,\n    \"overtime_cost\": overtime_cost,\n    \"overtime_hour\": overtime_hour,\n    \"min_profit\": min_profit\n}\n\nOBJECTIVE: Determine the quantity of batches for each part the manufacturer should produce every month, ensuring all constraints are met.\n\nOUTPUT INFO:\n\n- the number of batches of each part produced \\var{batches_{p}}.\n- \\var{total_profit} represents the total profit obtained for the month.\n\nOUTPUT FORMAT:\n\n{\n    \"batches\": [batches_{p} for p in 1, ..., P],\n    \"total_profit\": total_profit\n}", "data": {"time_required": [[2, 1, 3, 2], [4, 2, 1, 2], [6, 2, 1, 2]], "machine_costs": [160, 10, 15], "availability": [200, 300, 500], "prices": [570, 250, 585, 430], "min_batches": [10, 10, 10, 10], "standard_cost": 20, "overtime_cost": 30, "overtime_hour": 400, "min_profit": 5000}, "obj": 5600, "order": "58"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- Consider a rocket that travels along a straight path. \n- Let \\var{x_t}, \\var{v_t}, and \\var{a_t} be the position, velocity, and acceleration, respectively, of the rocket at time \\var{t}.\n- By discretizing time and by taking the time increment to be unity, we obtain an approximate discrete-time model of the form \n    \n    \\var{x_{t+1}} = \\var{x_t} + \\var{v_t}\n    \\var{v_{t+1}} = \\var{v_t} + \\var{a_t}\n\n- We assume that the acceleration \\var{a_t} is under our control, as it is determined by the rocket thrust.\n- In a rough model, the magnitude |\\var{a_t}| of the acceleraÂ­tion can be assumed to be proportional to the rate of fuel consumption at time \\var{t}.\n- Suppose that we have \\var{x_0} and \\var{v_0} as the initial position and velocity, respectively, of the rocket.\n- We wish the rocket to take off and reach a target position \\var{x_T} with speed \\var{v_T} at time \\var{T}.\n- Furthermore, we wish to accomplish this in an economical fashion, that is, by using as little fuel as possible.\n\n\nINPUT FORMAT: \n\n{\n    \"x_0\": x_0,\n    \"v_0\": v_0,\n    \"x_T\": x_T,\n    \"v_T\": v_T,\n    \"T\": T\n}\n\nOBJECTIVE: The objective is to minimize the total fuel \\sum_{t=0}^{\\var{T}-1} |\\var{a_t}| spent subject to the preceding constraints.\n\nOUTPUT INFO:\n\n- key \"x\" contains a list of the positions of the rocket at each time step from 0 to \\var{T}\n- key \"v\" contains a list of the velocities of the rocket at each time step from 0 to \\var{T}\n- key \"a\" contains a list of the accelerations of the rocket at each time step from 0 to \\var{T}\n- key \"fuel_spend\" contains the total fuel spent by the rocket\n\nOUTPUT FORMAT:\n\n{\n    \"x\": [x_i for i in 1, ..., T],\n    \"v\": [v_i for i in 1, ..., T],\n    \"a\": [a_i for i in 1, ..., T],\n    \"fuel_spend\": fuel_spent,\n}\n\n", "data": {"InitialPosition": 0, "InitialVelocity": 0, "FinalPosition": 1, "FinalVelocity": 0, "TotalTime": 20}, "obj": 0.111, "order": "6"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A delivery person starts at the intersection of \\var{1}th Avenue and \\var{1}th Street and needs to reach the intersection of \\var{W}th Avenue and \\var{N}th Street.\n- The path between these two points forms a \\var{N-1} Ã— \\var{W-1} grid.\n- Each block on the grid has a unique walking time due to varying pedestrian traffic during rush hour.\n- The delivery person can only walk north or west.\n- The journey can be broken down into \\var{m} stages, where at each stage the delivery person decides to walk either north or west.\n- When at the intersection of \\var{w}th Avenue and \\var{n}th Street, the time to move to the intersection of \\var{w+1}th Avenue and \\var{n}th Stree is \\var{west_time_{n,w}}.\n- When at the intersection of \\var{w}th Avenue and \\var{n}th Street, the time to move to the intersection of \\var{w}th Avenue and \\var{n+1}th Stree is \\var{north_time_{n,w}}.\n\nINPUT FORMAT:\n\n{\n    \"west_time\": [[west_{n,w} for w in 1, ..., W-1] for n in 1, ..., N],\n    \"north_time\": [[north_{n,w} for w in 1, ..., W] for n in 1, ..., N-1],\n}\n\nOBJECTIVE: Determine the optimal path the delivery person should take to ensure the package is delivered in the least amount of time.\n\nOUTPUT INFO:\n\n- \\var{total_time} represents total time taken to travel this path\n- \\var{paths} represents the flow going through the corresponding path\n\nOUTPUT FORMAT:\n\n{\n    \"paths\": [(street_{n}, avenue_{w}) for id in 1, ..., m]\n    \"total_time\": total_travel_time\n}", "data": {"west_time": [[3.5, 4.5], [4, 4], [5, 4]], "north_time": [[10, 10, 9], [9, 9, 12]]}, "obj": 26.5, "order": "60"}
{"description": "PROBLEM TYPE: MIP\n\nPROBLEM INFO:\n\n- A seaport unloads shipping containers off of rail cars, holds them in its yard on a transport system, and then loads them onto ships.\n- The demand \\var{demand_{t}} for containers by ships varies every month, and this demand must be fulfilled.\n- The unloading cost \\var{unload_cost_{t}} per container indicates how much it costs to unload a single container from the rail car.\n- The unloading capacity \\var{unload_capacity_{t}} specifies the maximum number of containers that can be unloaded in a month.\n- For each container kept in the yard until the subsequent month, there is a holding cost of $\\var{holding_cost}.\n- Due to space limitations, the yard can store a maximum of \\var{max_container} containers at the end of any month.\n- Initially, at the start of the first month, the yard has \\var{init_container} containers.\n- The yard should not contain any containers after the end of the last month.\n- Additionally, loading containers onto ships necessitates the rental of cranes.\n- A maximum of \\var{num_cranes} cranes can be rented each month, each having a capacity to load \\var{crane_capacity} containers.\n- It costs \\var{crane_cost} for each crane.\n\nINPUT FORMAT: \n\n{\n    \"demands\": [demand_{t} for t in 1, ..., T],\n    \"unload_costs\": [unload_cost_{t} for t in 1, ..., T],\n    \"unload_capacity\": [unload_capacity_{t} for t in 1, ..., T],\n    \"holding_cost\": holding_cost,\n    \"max_container\": max_container,\n    \"init_container\": init_container,\n    \"num_cranes\": num_cranes,\n    \"crane_capacity\": crane_capacity,\n    \"crane_cost\": crane_cost,\n}\n\nOBJECTIVE: Determine a strategy to minimize costs from unloading, storage, and crane rentals over the period.\n\nOUTPUT INFO:\n\n- \\var{amount_{t}} indicates the number of containers unloaded for each month.\n- \\var{crane_{t}} specifies the number of cranes rented for each month.\n- \\var{total_cost} shows the total cost of the company over the period.\n\nOUTPUT FORMAT:\n\n{\n    \"containers_unloaded\": [amount_{t} for t in 1, ..., T],\n    \"cranes_rented\": [crane_{t} for t in 1, ..., T],\n    \"total_cost\": total_cost\n}\n", "data": {"T": 4, "Demands": [450, 700, 500, 750], "UnloadCosts": [75, 100, 105, 130], "UnloadCapacity": [800, 500, 450, 700], "HoldingCost": 20, "MaxContainer": 500, "InitContainer": 200, "NumCranes": 4, "CraneCapacity": 200, "CraneCost": 1000}, "obj": 251500, "order": "61"}
{"description": "PROBLEM TYPE: MIP\n\nPROBLEM INFO:\n\n- A division of an auto parts manufacturer produces \\var{P} different parts using \\var{M} different machines.\n- Batch of 100 part \\var{p} requires \\var{time_{m,p}} hours on machine \\var{m}.\n- The division incurs a charge of \\var{cost_{m}} per hour for using machine \\var{m}.\n- Machine \\var{m} has an availability of up to \\var{available_{m}} hours per month.\n- The division sells part \\var{p} in batches of 100 at price of \\var{price_{p}} per batch.\n- Machine \\var{1} requires a setup time of \\var{setup_time_{p}} hours before it can be used for each part \\var{p}.\n- Other machines do not require a setup time.\n- There are no minimum production quantities for any part.\n\nINPUT FORMAT: \n\n{\n    \"time_required\": [[time_{m,p} for p in 1, ..., P] for m in 1, ..., M],\n    \"machine_costs\": [cost_{m} for m in 1, ..., M],\n    \"availability\": [available_{m} for m in 1, ..., M],\n    \"prices\": [price_{p} for p in 1, ..., P],\n    \"setup_time\": [setup_time_{p} for p in 1, ..., P]\n}\n\nOBJECTIVE: How many batches of each part should the manufacturer produce each month to maximize profit?\n\nOUTPUT INFO:\n\n- the number of batches of each part produced \\var{batches_{p}}.\n- \\var{setup_flags_{p}} indicates whether \\var{part_{p}} is set up or not.\n- \\var{total_profit} represents the total profit obtained for the month.\n\nOUTPUT FORMAT:\n\n{\n    \"batches\": [batches_{p} for p in 1, ..., P],\n    \"setup_flags\": [setup_flag_{p} for p in 1, ..., P],\n    \"total_profit\": total_profit\n}", "data": {"time_required": [[2, 1, 3, 2], [4, 2, 1, 2], [6, 2, 1, 2]], "machine_costs": [160, 10, 15], "availability": [200, 300, 500], "prices": [570, 250, 585, 430], "setup_time": [12, 8, 4, 0]}, "obj": 7120, "order": "62"}
{"description": "PROBLEM TYPE: MILP\n\nPROBLEM INFO:\n\n- A team of translators is being assem- bled for the summer Olympics to translate from English into the \\{M} other languages.\n- There is a pool of \\var{N} translators available.\n- Each translator \\var{i} can translate into a certain set of \\var{languages} and comes with a specific \\var{cost_i}.\n\nINPUT FORMAT: \n\n{\n\"translators\": [\n        {\"id\": i, \n         \"cost\": cost_i,\n         \"languages\": [language_j for j in 1, ..., L_i]\n        },\n        for n in 1, ..., N\n    ],\n    \"required_languages\": [language_m for m in 1, ..., M]\n}\n\nOBJECTIVE: Select the combination of translators that ensures all required languages can be translated into, at the minimum possible cost.\n\nOUTPUT INFO:\n\n- \\var{selected_translators} represents the list of translators chosen.\n- \\var{total_cost} shows the total cost for hiring the selected translators.\n\nOUTPUT FORMAT:\n\n{\n    \"selected_translators\": [translator_ids],\n    \"total_cost\": total_cost\n}", "data": {"translators": [{"id": 1, "cost": 12000, "languages": ["FR", "AR", "IT"]}, {"id": 2, "cost": 16000, "languages": ["GE", "RU", "CH"]}, {"id": 3, "cost": 13000, "languages": ["AR", "CH"]}, {"id": 4, "cost": 15000, "languages": ["FR", "SP", "IT", "PO"]}, {"id": 5, "cost": 9000, "languages": ["FR", "GE", "RU", "SP"]}, {"id": 6, "cost": 7000, "languages": ["GE", "SP", "PO"]}], "required_languages": ["FR", "AR", "GE", "RU", "SP", "CH", "IT", "PO"]}, "obj": 35000, "order": "63"}
{"description": "PROBLEM TYPE: MILP\n\nPROBLEM INFO:\n\n- A company has \\var{I} projects to be done by consultants.\n- They have a choice of \\var{J} consultants.\n- Each consultant may be assigned up to \\var{K} projects. \n- Hiring consultant \\var{j} incurs a fixed cost of \\var{f_j}.\n- Assigning project \\var{i} to consultant \\var{j} incurs an additional cost of \\var{c_{i,j}}.\n\nINPUT FORMAT: \n\n{\n    \"fixed_costs\": [f_j for j in 1, ..., J],\n    \"additional_costs\": [[c_{i,j} for j in 1, ..., J] for i in 1, ..., I],\n    \"max_projects_per_consultant\": K\n}\n\nOBJECTIVE: Determine the assignment of consultants to projects that minimizes the total cost.\n\nOUTPUT INFO:\n\n- The projects assigned to each consultant \\var{assignment_{j,i}}.\n- \\var{total_cost} reflects the total cost of hiring consultants and assigning them to projects.\n\nOUTPUT FORMAT:\n\n{\n    \"assignments\": [[assignment_{j,i} for i in 1, ..., I] for j in 1, ..., J],\n    \"total_cost\": total_cost\n}", "data": {"fixed_costs": [100, 150, 135], "additional_costs": [[10, 12, 20], [10, 8, 12], [15, 8, 20], [10, 6, 15], [8, 10, 15]], "max_projects_per_consultant": 3}, "obj": 290, "order": "64"}
{"description": "PROBLEM TYPE: MILP\n\nPROBLEM INFO:\n\n- The network faces an intrusion that requires immediate intervention.\n- Interventions include isolating nodes or scanning nodes affected by the intruder.\n- Each cluster of nodes must be treated with one intervention type consistently.\n- Interventions can be processed either centrally or through distributed nodes.\n- The processing times for each type of intervention are different across \\var{N} clusters.\n- The opportunity cost for processing is $\\var{central_cost}/h for central and $\\var{distributed_cost}/h for distributed processing.\n- There is a maximum allotment of \\var{max_central} hours for central processing and \\var{max_distributed} hours for distributed processing to address the intrusion.\n\nINPUT FORMAT: \n\n{\n    \"processing_times\": {\n        \"central\": {\n            \"isolate\": [isolate_central_{i} for i in 1, ..., N],\n            \"scan\": [scan_central_{i} for i in 1, ..., N]\n        },\n        \"distributed\": {\n            \"isolate\": [isolate_distributed_{i} for i in 1, ..., N],\n            \"scan\": [scan_distributed_{i} for i in 1, ..., N]\n        }\n    },\n    \"costs\": {\n        \"central\": central_cost,\n        \"distributed\": distributed_cost\n    },\n    \"max_hours\": {\n        \"central_max_hours\": max_central,\n        \"distributed_max_hours\": max_distributed\n    }\n}\n\nOBJECTIVE: Determine the most cost-effective combination of interventions to halt the intruder's progress within the network.\n\nOUTPUT INFO:\n\n- The output details the intervention type ('isolate' or 'scan') and processing method ('central' or 'distributed') for each cluster.\n- The \\var{total_cost} is the sum of costs for all interventions across the clusters.\n\nOUTPUT FORMAT:\n\n{\n    \"interventions\": {\n        [\n            {\n            \"cluster_id\": cluster_id\n            \"type\": \"isolate\" or \"scan\",\n            \"method\": \"central\" or \"distributed\",\n            \"amount\": amount_i\n            },\n            for i in 1, ..., N\n        ]\n    },\n    \"total_cost\": total_cost\n}\n\n\n\n\n", "data": {"processing_times": {"central": {"isolate": [10, 6, 8], "scan": [6, 4, 6]}, "distributed": {"isolate": [12, 9, 12], "scan": [18, 10, 15]}}, "costs": {"central": 150, "distributed": 70}, "max_hours": {"central_max_hours": 16, "distributed_max_hours": 33}}, "obj": 2280, "order": "65"}
{"description": "PROBLEM TYPE: MILP\n\nPROBLEM INFO:\n\n- A traveler based in \\var{start_city} needs to visit \\var{N} towns for business.\n- The distance \\var{distance_{i,j}} between city \\var{i} and \\var{j} is provided in miles and are symmetric, meaning the distance from city \\var{i} to city \\var{j} is the same as from city \\var{j} to city \\var{i}.\n- The traveler must return to \\var{start_city} after visiting all towns.\n\nINPUT FORMAT: \n\n{\n    \"distances\": {\n        city_i: {\n            city_j: distance_{i, j},\n            for j in 1, ..., N-1\n        },\n        for i in 1, ..., N\n    },\n    \"start_city\": start_city\n}\n\nOBJECTIVE: Determine the shortest route that the traveler can take to visit all \\var{N} towns and return to \\var{start_city}.\n\nOUTPUT INFO:\n\n- The sequence of cities visited after \\var{start_city} is \\var{visit_order}.\n- \\var{total_distance} traveled on this optimal journey.\n\nOUTPUT FORMAT:\n\n{\n    \"visit_order\": [city_n for n in 1, ..., N+1],\n    \"total_distance\": total_distance\n}", "data": {"N": 6, "Distances": [[0, 182, 70, 399, 56, 214], [182, 0, 255, 229, 132, 267], [70, 255, 0, 472, 127, 287], [399, 229, 472, 0, 356, 484], [56, 132, 127, 356, 0, 179], [214, 267, 287, 484, 179, 0]], "StartCity": 0}, "obj": 1256, "order": "66"}
{"description": "PROBLEM TYPE: MILP\n\nPROBLEM INFO:\n\n- A paper company produces large rolls of paper with a width of \\var{large_roll_width} inches.\n- These large rolls are cut into smaller rolls of various widths options to meet customer demand.\n- There are \\var{M} different types of smaller rolls.\n- The demand for rolls of width \\var{inch_j} â€‹is \\var{demand_j}â€‹ units.\n- The company has \\var{N} different cutting patterns available for producing the smaller rolls.\n- For pattern \\var{i}, the number of rolls of width \\var{j} that are produced is \\var{pattern_{i,j}}.\n\nINPUT FORMAT: \n\n{\n    \"large_roll_width\": large_roll_width,\n    \"roll_width_options\": [inch_j for j in 1, ..., M],\n    \"demands\": [demand_j for j in 1, ..., M],\n    \"patterns\": [[pattern_{i,j} for j in 1, ..., M] for i in 1, ..., N]\n}\n\nOBJECTIVE: Determine the minimum number of large \\var{large_roll_width}-inch rolls needed to fulfill all the orders.\n\nOUTPUT INFO:\n\n- The different cutting patterns applied to the large rolls are detailed in \\var{patterns}.\n- The total number of large rolls of paper used in this optimization is \\var{total_large_rolls_used}.\n\nOUTPUT FORMAT:\n\n{\n    \"patterns\": [\n        {\n         \"pattern\": [pattern_j for i in 1, ..., M]\n         \"amount\": amount_i\n        }\n        for i in 1, ..., N\n    ],\n    \"total_large_rolls_used\": total_large_rolls\n}", "data": {"large_roll_width": 70, "demands": [40, 65, 80, 75], "roll_width_options": [17, 14, 11, 8.5], "patterns": [[4, 0, 0, 0], [3, 1, 0, 0], [3, 0, 1, 0], [2, 2, 0, 0], [3, 0, 0, 2], [2, 1, 2, 0], [2, 1, 1, 1], [2, 1, 0, 2], [2, 0, 3, 0], [2, 0, 2, 1], [2, 0, 1, 2], [1, 3, 1, 0], [1, 3, 0, 1], [1, 2, 2, 0], [1, 2, 1, 1], [1, 2, 0, 2], [1, 1, 3, 0], [0, 5, 0, 0], [0, 4, 1, 0], [0, 4, 0, 1], [0, 3, 2, 0], [2, 0, 0, 4], [1, 1, 2, 2], [1, 1, 1, 3], [1, 1, 0, 4], [1, 0, 4, 1], [1, 0, 3, 2], [1, 0, 2, 3], [1, 0, 1, 4], [0, 3, 1, 2], [0, 3, 0, 3], [0, 2, 3, 1], [0, 2, 2, 2], [0, 2, 1, 3], [0, 2, 0, 4], [0, 1, 5, 0], [0, 1, 4, 1], [0, 1, 3, 2], [0, 0, 6, 0], [0, 0, 5, 1], [1, 0, 0, 6], [0, 1, 2, 4], [0, 1, 1, 5], [0, 1, 0, 6], [0, 0, 4, 3], [0, 0, 3, 4], [0, 0, 2, 5], [0, 0, 1, 6], [0, 0, 0, 8]]}, "obj": 45, "order": "67"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- Consider a rocket that travels along a straight path. \n- Let \\var{x_t}, \\var{v_t}, and \\var{a_t} be the position, velocity, and acceleration, respectively, of the rocket at time \\var{t}.\n- By discretizing time and by taking the time increment to be unity, we obtain an approximate discrete-time model of the form \n    \n    \\var{x_{t+1}} = \\var{x_t} + \\var{v_t}\n    \\var{v_{t+1}} = \\var{v_t} + \\var{a_t}\n\n- We assume that the acceleration \\var{a_t} is under our control, as it is determined by the rocket thrust.\n- In a rough model, the magnitude |\\var{a_t}| of the acceleraÂ­tion can be assumed to be proportional to the rate of fuel consumption at time \\var{t}.\n- Suppose that we have \\var{x_0} and \\var{v_0} as the initial position and velocity, respectively, of the rocket.\n- We wish the rocket to take off and reach a target position \\var{x_T} with speed \\var{v_T} at time \\var{T}.\n- Furthermore, we wish to accomplish this in an economical fashion, that is, by using as little fuel as possible.\n\n\nINPUT FORMAT: \n\n{\n    \"x_0\": x_0,\n    \"v_0\": v_0,\n    \"x_T\": x_T,\n    \"v_T\": v_T,\n    \"T\": T\n}\n\nOBJECTIVE: The objective is to minimize the maximum thrust required, which is max_t |a_t|. \n\nOUTPUT INFO:\n\n- key \"x\" contains a list of the positions of the rocket at each time step from 0 to \\var{T}\n- key \"v\" contains a list of the velocities of the rocket at each time step from 0 to \\var{T}\n- key \"a\" contains a list of the accelerations of the rocket at each time step from 0 to \\var{T}\n- key \"fuel_spend\" contains the total fuel spent by the rocket\n\nOUTPUT FORMAT:\n\n{\n    \"x\": [x_i for i in 1, ..., T],\n    \"v\": [v_i for i in 1, ..., T],\n    \"a\": [a_i for i in 1, ..., T],\n    \"fuel_spend\": fuel_spent,\n}\n\n", "data": {"X0": 0, "V0": 0, "XT": 1, "VT": 0, "T": 20}, "obj": 0.0111, "order": "7"}
{"description": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A small firm specializes in making some types of spare automobile parts. \n- Each part is has to go through several shops \n- The required worker-hours for part \\var{k} in shop \\var{s} is \\var{time_{k, s}}.\n- The profit of part \\var{k} is \\var{profit_{k}}.\n- The capacity of shop \\var{s} is \\var{capacity_{s}} working hours.\n\nINPUT FORMAT:\n\n{\n\t\"time\": [[time_{k, s} for s in 1,...,S] for k in 1,...,K],\n\t\"profit\": [profit_{k} for k in 1,...,K],\n\t\"capacity\": [capacity_{s} for s in 1,...,S]\n}\n\n\nOBJECTIVE: Formulate the problem of determining the quantities of each spare part to be made during the month so as to maximize profit.\n\nOUTPUT INFO:\n\n- \\var{quantity} represents the amount of each spare part to be made\n\nOUTPUT FORMAT:\n\n{\n\t\"quantity\": [quantity_{k} for k in 1,...,K]\n}", "data": {"NumParts": 5, "NumMachines": 2, "Time": [[2, 3], [1, 2], [3, 2], [3, 1], [1, 1]], "Profit": [30, 20, 40, 25, 10], "Capacity": [700, 1000]}, "obj": 12000.0, "order": "8"}
{"description": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- Suppose that \\var{Z} is a random variable taking values 0, 1, ..., \\var{K}, with probabilities var{p_0}, \\var{p_1}, ..., \\var{p_K}, respectively.\n- We are given the values of the first two moments:\n\nE[\\var{Z}] = \\sum_{k=0}^{\\var{K}} k \\var{p_k} \nE[\\var{Z}^2] = \\sum_{k=0}^{\\var{K}} k^2 \\var{p_k} of \\var{Z} \n\n- We would like to obtain upper and lower bounds on the value of the fourth moment \n\nE[\\var{Z}_4] = \\sum_{k=0}^{K} k^4 \\var{p_k} of \\var{Z}\n\nShow how linear programming can be used to approach this problem. \t\t\t\t\n\nINPUT FORMAT: \n\n{\n    \"K\": K,\n    \"p\": [p_i for i in 0, ..., K]\n    \"E[Z]\": E[Z],\n    \"E[Z^2]\": E[Z^2],\n}\n\nOBJECTIVE: Use linear programming to find lower and upper bounds on E[Z^4].\n\nOUTPUT INFO:\n\n- The lower and upper bounds on E[Z^4] should be stored in the variables lower_bound and upper_bound, respectively.\n\nOUTPUT FORMAT:\n\n{\n    \"lower_bound\": lower_bound,\n    \"upper_bound\": upper_bound,\n}", "data": {"K": 6, "P": [0.1, 0.2, 0.3, 0.2, 0.1, 0.1], "ExpectedZ": 3, "ExpectedZSquared": 10}, "obj": [118.0, 150.0], "order": "9"}
